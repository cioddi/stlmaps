/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const os="174";const hs="",zt="srgb",Ii="srgb-linear",Di="linear",Qe="srgb";class Xe{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){const i=this._listeners;return i===void 0?!1:i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){const i=this._listeners;if(i===void 0)return;const s=i[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const i=e[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,r=s.length;n<r;n++)s[n].call(this,t);t.target=null}}}const it=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function ce(){const c=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(it[c&255]+it[c>>8&255]+it[c>>16&255]+it[c>>24&255]+"-"+it[t&255]+it[t>>8&255]+"-"+it[t>>16&15|64]+it[t>>24&255]+"-"+it[e&63|128]+it[e>>8&255]+"-"+it[e>>16&255]+it[e>>24&255]+it[i&255]+it[i>>8&255]+it[i>>16&255]+it[i>>24&255]).toLowerCase()}function I(c,t,e){return Math.max(t,Math.min(e,c))}function ws(c,t){return(c%t+t)%t}function je(c,t,e){return(1-e)*c+e*t}function de(c,t){switch(t.constructor){case Float32Array:return c;case Uint32Array:return c/4294967295;case Uint16Array:return c/65535;case Uint8Array:return c/255;case Int32Array:return Math.max(c/2147483647,-1);case Int16Array:return Math.max(c/32767,-1);case Int8Array:return Math.max(c/127,-1);default:throw new Error("Invalid component type.")}}function ht(c,t){switch(t.constructor){case Float32Array:return c;case Uint32Array:return Math.round(c*4294967295);case Uint16Array:return Math.round(c*65535);case Uint8Array:return Math.round(c*255);case Int32Array:return Math.round(c*2147483647);case Int16Array:return Math.round(c*32767);case Int8Array:return Math.round(c*127);default:throw new Error("Invalid component type.")}}class T{constructor(t=0,e=0){T.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=I(this.x,t.x,e.x),this.y=I(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=I(this.x,t,e),this.y=I(this.y,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(I(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(I(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,r=this.y-t.y;return this.x=n*i-r*s+t.x,this.y=n*s+r*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Nt{constructor(t,e,i,s,n,r,o,h,l){Nt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,o,h,l)}set(t,e,i,s,n,r,o,h,l){const a=this.elements;return a[0]=t,a[1]=s,a[2]=o,a[3]=e,a[4]=n,a[5]=h,a[6]=i,a[7]=r,a[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],o=i[3],h=i[6],l=i[1],a=i[4],u=i[7],p=i[2],d=i[5],f=i[8],y=s[0],m=s[3],g=s[6],_=s[1],M=s[4],b=s[7],F=s[2],P=s[5],S=s[8];return n[0]=r*y+o*_+h*F,n[3]=r*m+o*M+h*P,n[6]=r*g+o*b+h*S,n[1]=l*y+a*_+u*F,n[4]=l*m+a*M+u*P,n[7]=l*g+a*b+u*S,n[2]=p*y+d*_+f*F,n[5]=p*m+d*M+f*P,n[8]=p*g+d*b+f*S,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],h=t[6],l=t[7],a=t[8];return e*r*a-e*o*l-i*n*a+i*o*h+s*n*l-s*r*h}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],h=t[6],l=t[7],a=t[8],u=a*r-o*l,p=o*h-a*n,d=l*n-r*h,f=e*u+i*p+s*d;if(f===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/f;return t[0]=u*y,t[1]=(s*l-a*i)*y,t[2]=(o*i-s*r)*y,t[3]=p*y,t[4]=(a*e-s*h)*y,t[5]=(s*n-o*e)*y,t[6]=d*y,t[7]=(i*h-l*e)*y,t[8]=(r*e-i*n)*y,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,r,o){const h=Math.cos(n),l=Math.sin(n);return this.set(i*h,i*l,-i*(h*r+l*o)+r+t,-s*l,s*h,-s*(-l*r+h*o)+o+e,0,0,1),this}scale(t,e){return this.premultiply(Ke.makeScale(t,e)),this}rotate(t){return this.premultiply(Ke.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ke.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Ke=new Nt;function Ms(c){for(let t=c.length-1;t>=0;--t)if(c[t]>=65535)return!0;return!1}function Li(c){return document.createElementNS("http://www.w3.org/1999/xhtml",c)}const Ui=new Nt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Vi=new Nt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function zs(){const c={enabled:!0,workingColorSpace:Ii,spaces:{},convert:function(s,n,r){return this.enabled===!1||n===r||!n||!r||(this.spaces[n].transfer===Qe&&(s.r=Rt(s.r),s.g=Rt(s.g),s.b=Rt(s.b)),this.spaces[n].primaries!==this.spaces[r].primaries&&(s.applyMatrix3(this.spaces[n].toXYZ),s.applyMatrix3(this.spaces[r].fromXYZ)),this.spaces[r].transfer===Qe&&(s.r=re(s.r),s.g=re(s.g),s.b=re(s.b))),s},fromWorkingColorSpace:function(s,n){return this.convert(s,this.workingColorSpace,n)},toWorkingColorSpace:function(s,n){return this.convert(s,n,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===hs?Di:this.spaces[s].transfer},getLuminanceCoefficients:function(s,n=this.workingColorSpace){return s.fromArray(this.spaces[n].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,n,r){return s.copy(this.spaces[n].toXYZ).multiply(this.spaces[r].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],i=[.3127,.329];return c.define({[Ii]:{primaries:t,whitePoint:i,transfer:Di,toXYZ:Ui,fromXYZ:Vi,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:zt},outputColorSpaceConfig:{drawingBufferColorSpace:zt}},[zt]:{primaries:t,whitePoint:i,transfer:Qe,toXYZ:Ui,fromXYZ:Vi,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:zt}}}),c}const gt=zs();function Rt(c){return c<.04045?c*.0773993808:Math.pow(c*.9478672986+.0521327014,2.4)}function re(c){return c<.0031308?c*12.92:1.055*Math.pow(c,.41666)-.055}let Xt;class As{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Xt===void 0&&(Xt=Li("canvas")),Xt.width=t.width,Xt.height=t.height;const i=Xt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Xt}return e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Li("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let r=0;r<n.length;r++)n[r]=Rt(n[r]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(Rt(e[i]/255)*255):e[i]=Rt(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Ss=0;class vs{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Ss++}),this.uuid=ce(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let r=0,o=s.length;r<o;r++)s[r].isDataTexture?n.push(ti(s[r].image)):n.push(ti(s[r]))}else n=ti(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function ti(c){return typeof HTMLImageElement<"u"&&c instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&c instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&c instanceof ImageBitmap?As.getDataURL(c):c.data?{data:Array.from(c.data),width:c.width,height:c.height,type:c.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let _s=0;class Zt extends Xe{constructor(t=Zt.DEFAULT_IMAGE,e=Zt.DEFAULT_MAPPING,i=1001,s=1001,n=1006,r=1008,o=1023,h=1009,l=Zt.DEFAULT_ANISOTROPY,a=hs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:_s++}),this.uuid=ce(),this.name="",this.source=new vs(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=r,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=h,this.offset=new T(0,0),this.repeat=new T(1,1),this.center=new T(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Nt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=a,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}Zt.DEFAULT_IMAGE=null;Zt.DEFAULT_MAPPING=300;Zt.DEFAULT_ANISOTROPY=1;class Ae{constructor(t=0,e=0,i=0,s=1){Ae.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=this.w,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*s+r[12]*n,this.y=r[1]*e+r[5]*i+r[9]*s+r[13]*n,this.z=r[2]*e+r[6]*i+r[10]*s+r[14]*n,this.w=r[3]*e+r[7]*i+r[11]*s+r[15]*n,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,s,n;const h=t.elements,l=h[0],a=h[4],u=h[8],p=h[1],d=h[5],f=h[9],y=h[2],m=h[6],g=h[10];if(Math.abs(a-p)<.01&&Math.abs(u-y)<.01&&Math.abs(f-m)<.01){if(Math.abs(a+p)<.1&&Math.abs(u+y)<.1&&Math.abs(f+m)<.1&&Math.abs(l+d+g-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const M=(l+1)/2,b=(d+1)/2,F=(g+1)/2,P=(a+p)/4,S=(u+y)/4,w=(f+m)/4;return M>b&&M>F?M<.01?(i=0,s=.707106781,n=.707106781):(i=Math.sqrt(M),s=P/i,n=S/i):b>F?b<.01?(i=.707106781,s=0,n=.707106781):(s=Math.sqrt(b),i=P/s,n=w/s):F<.01?(i=.707106781,s=.707106781,n=0):(n=Math.sqrt(F),i=S/n,s=w/n),this.set(i,s,n,e),this}let _=Math.sqrt((m-f)*(m-f)+(u-y)*(u-y)+(p-a)*(p-a));return Math.abs(_)<.001&&(_=1),this.x=(m-f)/_,this.y=(u-y)/_,this.z=(p-a)/_,this.w=Math.acos((l+d+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=I(this.x,t.x,e.x),this.y=I(this.y,t.y,e.y),this.z=I(this.z,t.z,e.z),this.w=I(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=I(this.x,t,e),this.y=I(this.y,t,e),this.z=I(this.z,t,e),this.w=I(this.w,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(I(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Se{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,r,o){let h=i[s+0],l=i[s+1],a=i[s+2],u=i[s+3];const p=n[r+0],d=n[r+1],f=n[r+2],y=n[r+3];if(o===0){t[e+0]=h,t[e+1]=l,t[e+2]=a,t[e+3]=u;return}if(o===1){t[e+0]=p,t[e+1]=d,t[e+2]=f,t[e+3]=y;return}if(u!==y||h!==p||l!==d||a!==f){let m=1-o;const g=h*p+l*d+a*f+u*y,_=g>=0?1:-1,M=1-g*g;if(M>Number.EPSILON){const F=Math.sqrt(M),P=Math.atan2(F,g*_);m=Math.sin(m*P)/F,o=Math.sin(o*P)/F}const b=o*_;if(h=h*m+p*b,l=l*m+d*b,a=a*m+f*b,u=u*m+y*b,m===1-o){const F=1/Math.sqrt(h*h+l*l+a*a+u*u);h*=F,l*=F,a*=F,u*=F}}t[e]=h,t[e+1]=l,t[e+2]=a,t[e+3]=u}static multiplyQuaternionsFlat(t,e,i,s,n,r){const o=i[s],h=i[s+1],l=i[s+2],a=i[s+3],u=n[r],p=n[r+1],d=n[r+2],f=n[r+3];return t[e]=o*f+a*u+h*d-l*p,t[e+1]=h*f+a*p+l*u-o*d,t[e+2]=l*f+a*d+o*p-h*u,t[e+3]=a*f-o*u-h*p-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,n=t._z,r=t._order,o=Math.cos,h=Math.sin,l=o(i/2),a=o(s/2),u=o(n/2),p=h(i/2),d=h(s/2),f=h(n/2);switch(r){case"XYZ":this._x=p*a*u+l*d*f,this._y=l*d*u-p*a*f,this._z=l*a*f+p*d*u,this._w=l*a*u-p*d*f;break;case"YXZ":this._x=p*a*u+l*d*f,this._y=l*d*u-p*a*f,this._z=l*a*f-p*d*u,this._w=l*a*u+p*d*f;break;case"ZXY":this._x=p*a*u-l*d*f,this._y=l*d*u+p*a*f,this._z=l*a*f+p*d*u,this._w=l*a*u-p*d*f;break;case"ZYX":this._x=p*a*u-l*d*f,this._y=l*d*u+p*a*f,this._z=l*a*f-p*d*u,this._w=l*a*u+p*d*f;break;case"YZX":this._x=p*a*u+l*d*f,this._y=l*d*u+p*a*f,this._z=l*a*f-p*d*u,this._w=l*a*u-p*d*f;break;case"XZY":this._x=p*a*u-l*d*f,this._y=l*d*u-p*a*f,this._z=l*a*f+p*d*u,this._w=l*a*u+p*d*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],r=e[1],o=e[5],h=e[9],l=e[2],a=e[6],u=e[10],p=i+o+u;if(p>0){const d=.5/Math.sqrt(p+1);this._w=.25/d,this._x=(a-h)*d,this._y=(n-l)*d,this._z=(r-s)*d}else if(i>o&&i>u){const d=2*Math.sqrt(1+i-o-u);this._w=(a-h)/d,this._x=.25*d,this._y=(s+r)/d,this._z=(n+l)/d}else if(o>u){const d=2*Math.sqrt(1+o-i-u);this._w=(n-l)/d,this._x=(s+r)/d,this._y=.25*d,this._z=(h+a)/d}else{const d=2*Math.sqrt(1+u-i-o);this._w=(r-s)/d,this._x=(n+l)/d,this._y=(h+a)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(I(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,r=t._w,o=e._x,h=e._y,l=e._z,a=e._w;return this._x=i*a+r*o+s*l-n*h,this._y=s*a+r*h+n*o-i*l,this._z=n*a+r*l+i*h-s*o,this._w=r*a-i*o-s*h-n*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,r=this._w;let o=r*t._w+i*t._x+s*t._y+n*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=r,this._x=i,this._y=s,this._z=n,this;const h=1-o*o;if(h<=Number.EPSILON){const d=1-e;return this._w=d*r+e*this._w,this._x=d*i+e*this._x,this._y=d*s+e*this._y,this._z=d*n+e*this._z,this.normalize(),this}const l=Math.sqrt(h),a=Math.atan2(l,o),u=Math.sin((1-e)*a)/l,p=Math.sin(e*a)/l;return this._w=r*u+this._w*p,this._x=i*u+this._x*p,this._y=s*u+this._y*p,this._z=n*u+this._z*p,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),n=Math.sqrt(i);return this.set(s*Math.sin(t),s*Math.cos(t),n*Math.sin(e),n*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class x{constructor(t=0,e=0,i=0){x.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Wi.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Wi.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,r=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*r,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*r,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*r,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,r=t.y,o=t.z,h=t.w,l=2*(r*s-o*i),a=2*(o*e-n*s),u=2*(n*i-r*e);return this.x=e+h*l+r*u-o*a,this.y=i+h*a+o*l-n*u,this.z=s+h*u+n*a-r*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=I(this.x,t.x,e.x),this.y=I(this.y,t.y,e.y),this.z=I(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=I(this.x,t,e),this.y=I(this.y,t,e),this.z=I(this.z,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(I(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,r=e.x,o=e.y,h=e.z;return this.x=s*h-n*o,this.y=n*r-i*h,this.z=i*o-s*r,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return ei.copy(this).projectOnVector(t),this.sub(ei)}reflect(t){return this.sub(ei.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(I(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ei=new x,Wi=new Se;class ue{constructor(t=new x(1/0,1/0,1/0),e=new x(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(bt.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(bt.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=bt.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const n=i.getAttribute("position");if(e===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let r=0,o=n.count;r<o;r++)t.isMesh===!0?t.getVertexPosition(r,bt):bt.fromBufferAttribute(n,r),bt.applyMatrix4(t.matrixWorld),this.expandByPoint(bt);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Fe.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Fe.copy(i.boundingBox)),Fe.applyMatrix4(t.matrixWorld),this.union(Fe)}const s=t.children;for(let n=0,r=s.length;n<r;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,bt),bt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(fe),Ce.subVectors(this.max,fe),Yt.subVectors(t.a,fe),$t.subVectors(t.b,fe),Qt.subVectors(t.c,fe),It.subVectors($t,Yt),Dt.subVectors(Qt,$t),Wt.subVectors(Yt,Qt);let e=[0,-It.z,It.y,0,-Dt.z,Dt.y,0,-Wt.z,Wt.y,It.z,0,-It.x,Dt.z,0,-Dt.x,Wt.z,0,-Wt.x,-It.y,It.x,0,-Dt.y,Dt.x,0,-Wt.y,Wt.x,0];return!ii(e,Yt,$t,Qt,Ce)||(e=[1,0,0,0,1,0,0,0,1],!ii(e,Yt,$t,Qt,Ce))?!1:(Te.crossVectors(It,Dt),e=[Te.x,Te.y,Te.z],ii(e,Yt,$t,Qt,Ce))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,bt).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(bt).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Tt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Tt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Tt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Tt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Tt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Tt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Tt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Tt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Tt),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Tt=[new x,new x,new x,new x,new x,new x,new x,new x],bt=new x,Fe=new ue,Yt=new x,$t=new x,Qt=new x,It=new x,Dt=new x,Wt=new x,fe=new x,Ce=new x,Te=new x,qt=new x;function ii(c,t,e,i,s){for(let n=0,r=c.length-3;n<=r;n+=3){qt.fromArray(c,n);const o=s.x*Math.abs(qt.x)+s.y*Math.abs(qt.y)+s.z*Math.abs(qt.z),h=t.dot(qt),l=e.dot(qt),a=i.dot(qt);if(Math.max(-Math.max(h,l,a),Math.min(h,l,a))>o)return!1}return!0}const Fs=new ue,ye=new x,si=new x;class as{constructor(t=new x,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):Fs.setFromPoints(t).getCenter(i);let s=0;for(let n=0,r=t.length;n<r;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ye.subVectors(t,this.center);const e=ye.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(ye,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(si.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ye.copy(t.center).add(si)),this.expandByPoint(ye.copy(t.center).sub(si))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Bt=new x,ni=new x,Be=new x,Lt=new x,ri=new x,Ee=new x,oi=new x;class Cs{constructor(t=new x,e=new x(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Bt)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Bt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Bt.copy(this.origin).addScaledVector(this.direction,e),Bt.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){ni.copy(t).add(e).multiplyScalar(.5),Be.copy(e).sub(t).normalize(),Lt.copy(this.origin).sub(ni);const n=t.distanceTo(e)*.5,r=-this.direction.dot(Be),o=Lt.dot(this.direction),h=-Lt.dot(Be),l=Lt.lengthSq(),a=Math.abs(1-r*r);let u,p,d,f;if(a>0)if(u=r*h-o,p=r*o-h,f=n*a,u>=0)if(p>=-f)if(p<=f){const y=1/a;u*=y,p*=y,d=u*(u+r*p+2*o)+p*(r*u+p+2*h)+l}else p=n,u=Math.max(0,-(r*p+o)),d=-u*u+p*(p+2*h)+l;else p=-n,u=Math.max(0,-(r*p+o)),d=-u*u+p*(p+2*h)+l;else p<=-f?(u=Math.max(0,-(-r*n+o)),p=u>0?-n:Math.min(Math.max(-n,-h),n),d=-u*u+p*(p+2*h)+l):p<=f?(u=0,p=Math.min(Math.max(-n,-h),n),d=p*(p+2*h)+l):(u=Math.max(0,-(r*n+o)),p=u>0?n:Math.min(Math.max(-n,-h),n),d=-u*u+p*(p+2*h)+l);else p=r>0?-n:n,u=Math.max(0,-(r*p+o)),d=-u*u+p*(p+2*h)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy(ni).addScaledVector(Be,p),d}intersectSphere(t,e){Bt.subVectors(t.center,this.origin);const i=Bt.dot(this.direction),s=Bt.dot(Bt)-i*i,n=t.radius*t.radius;if(s>n)return null;const r=Math.sqrt(n-s),o=i-r,h=i+r;return h<0?null:o<0?this.at(h,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,n,r,o,h;const l=1/this.direction.x,a=1/this.direction.y,u=1/this.direction.z,p=this.origin;return l>=0?(i=(t.min.x-p.x)*l,s=(t.max.x-p.x)*l):(i=(t.max.x-p.x)*l,s=(t.min.x-p.x)*l),a>=0?(n=(t.min.y-p.y)*a,r=(t.max.y-p.y)*a):(n=(t.max.y-p.y)*a,r=(t.min.y-p.y)*a),i>r||n>s||((n>i||isNaN(i))&&(i=n),(r<s||isNaN(s))&&(s=r),u>=0?(o=(t.min.z-p.z)*u,h=(t.max.z-p.z)*u):(o=(t.max.z-p.z)*u,h=(t.min.z-p.z)*u),i>h||o>s)||((o>i||i!==i)&&(i=o),(h<s||s!==s)&&(s=h),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,Bt)!==null}intersectTriangle(t,e,i,s,n){ri.subVectors(e,t),Ee.subVectors(i,t),oi.crossVectors(ri,Ee);let r=this.direction.dot(oi),o;if(r>0){if(s)return null;o=1}else if(r<0)o=-1,r=-r;else return null;Lt.subVectors(this.origin,t);const h=o*this.direction.dot(Ee.crossVectors(Lt,Ee));if(h<0)return null;const l=o*this.direction.dot(ri.cross(Lt));if(l<0||h+l>r)return null;const a=-o*Lt.dot(oi);return a<0?null:this.at(a/r,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class yt{constructor(t,e,i,s,n,r,o,h,l,a,u,p,d,f,y,m){yt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,o,h,l,a,u,p,d,f,y,m)}set(t,e,i,s,n,r,o,h,l,a,u,p,d,f,y,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=s,g[1]=n,g[5]=r,g[9]=o,g[13]=h,g[2]=l,g[6]=a,g[10]=u,g[14]=p,g[3]=d,g[7]=f,g[11]=y,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new yt().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/jt.setFromMatrixColumn(t,0).length(),n=1/jt.setFromMatrixColumn(t,1).length(),r=1/jt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*r,e[9]=i[9]*r,e[10]=i[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,r=Math.cos(i),o=Math.sin(i),h=Math.cos(s),l=Math.sin(s),a=Math.cos(n),u=Math.sin(n);if(t.order==="XYZ"){const p=r*a,d=r*u,f=o*a,y=o*u;e[0]=h*a,e[4]=-h*u,e[8]=l,e[1]=d+f*l,e[5]=p-y*l,e[9]=-o*h,e[2]=y-p*l,e[6]=f+d*l,e[10]=r*h}else if(t.order==="YXZ"){const p=h*a,d=h*u,f=l*a,y=l*u;e[0]=p+y*o,e[4]=f*o-d,e[8]=r*l,e[1]=r*u,e[5]=r*a,e[9]=-o,e[2]=d*o-f,e[6]=y+p*o,e[10]=r*h}else if(t.order==="ZXY"){const p=h*a,d=h*u,f=l*a,y=l*u;e[0]=p-y*o,e[4]=-r*u,e[8]=f+d*o,e[1]=d+f*o,e[5]=r*a,e[9]=y-p*o,e[2]=-r*l,e[6]=o,e[10]=r*h}else if(t.order==="ZYX"){const p=r*a,d=r*u,f=o*a,y=o*u;e[0]=h*a,e[4]=f*l-d,e[8]=p*l+y,e[1]=h*u,e[5]=y*l+p,e[9]=d*l-f,e[2]=-l,e[6]=o*h,e[10]=r*h}else if(t.order==="YZX"){const p=r*h,d=r*l,f=o*h,y=o*l;e[0]=h*a,e[4]=y-p*u,e[8]=f*u+d,e[1]=u,e[5]=r*a,e[9]=-o*a,e[2]=-l*a,e[6]=d*u+f,e[10]=p-y*u}else if(t.order==="XZY"){const p=r*h,d=r*l,f=o*h,y=o*l;e[0]=h*a,e[4]=-u,e[8]=l*a,e[1]=p*u+y,e[5]=r*a,e[9]=d*u-f,e[2]=f*u-d,e[6]=o*a,e[10]=y*u+p}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ts,t,Bs)}lookAt(t,e,i){const s=this.elements;return dt.subVectors(t,e),dt.lengthSq()===0&&(dt.z=1),dt.normalize(),Ut.crossVectors(i,dt),Ut.lengthSq()===0&&(Math.abs(i.z)===1?dt.x+=1e-4:dt.z+=1e-4,dt.normalize(),Ut.crossVectors(i,dt)),Ut.normalize(),ke.crossVectors(dt,Ut),s[0]=Ut.x,s[4]=ke.x,s[8]=dt.x,s[1]=Ut.y,s[5]=ke.y,s[9]=dt.y,s[2]=Ut.z,s[6]=ke.z,s[10]=dt.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],o=i[4],h=i[8],l=i[12],a=i[1],u=i[5],p=i[9],d=i[13],f=i[2],y=i[6],m=i[10],g=i[14],_=i[3],M=i[7],b=i[11],F=i[15],P=s[0],S=s[4],w=s[8],R=s[12],B=s[1],E=s[5],D=s[9],U=s[13],O=s[2],V=s[6],G=s[10],Q=s[14],nt=s[3],N=s[7],H=s[11],J=s[15];return n[0]=r*P+o*B+h*O+l*nt,n[4]=r*S+o*E+h*V+l*N,n[8]=r*w+o*D+h*G+l*H,n[12]=r*R+o*U+h*Q+l*J,n[1]=a*P+u*B+p*O+d*nt,n[5]=a*S+u*E+p*V+d*N,n[9]=a*w+u*D+p*G+d*H,n[13]=a*R+u*U+p*Q+d*J,n[2]=f*P+y*B+m*O+g*nt,n[6]=f*S+y*E+m*V+g*N,n[10]=f*w+y*D+m*G+g*H,n[14]=f*R+y*U+m*Q+g*J,n[3]=_*P+M*B+b*O+F*nt,n[7]=_*S+M*E+b*V+F*N,n[11]=_*w+M*D+b*G+F*H,n[15]=_*R+M*U+b*Q+F*J,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],r=t[1],o=t[5],h=t[9],l=t[13],a=t[2],u=t[6],p=t[10],d=t[14],f=t[3],y=t[7],m=t[11],g=t[15];return f*(+n*h*u-s*l*u-n*o*p+i*l*p+s*o*d-i*h*d)+y*(+e*h*d-e*l*p+n*r*p-s*r*d+s*l*a-n*h*a)+m*(+e*l*u-e*o*d-n*r*u+i*r*d+n*o*a-i*l*a)+g*(-s*o*a-e*h*u+e*o*p+s*r*u-i*r*p+i*h*a)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],h=t[6],l=t[7],a=t[8],u=t[9],p=t[10],d=t[11],f=t[12],y=t[13],m=t[14],g=t[15],_=u*m*l-y*p*l+y*h*d-o*m*d-u*h*g+o*p*g,M=f*p*l-a*m*l-f*h*d+r*m*d+a*h*g-r*p*g,b=a*y*l-f*u*l+f*o*d-r*y*d-a*o*g+r*u*g,F=f*u*h-a*y*h-f*o*p+r*y*p+a*o*m-r*u*m,P=e*_+i*M+s*b+n*F;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/P;return t[0]=_*S,t[1]=(y*p*n-u*m*n-y*s*d+i*m*d+u*s*g-i*p*g)*S,t[2]=(o*m*n-y*h*n+y*s*l-i*m*l-o*s*g+i*h*g)*S,t[3]=(u*h*n-o*p*n-u*s*l+i*p*l+o*s*d-i*h*d)*S,t[4]=M*S,t[5]=(a*m*n-f*p*n+f*s*d-e*m*d-a*s*g+e*p*g)*S,t[6]=(f*h*n-r*m*n-f*s*l+e*m*l+r*s*g-e*h*g)*S,t[7]=(r*p*n-a*h*n+a*s*l-e*p*l-r*s*d+e*h*d)*S,t[8]=b*S,t[9]=(f*u*n-a*y*n-f*i*d+e*y*d+a*i*g-e*u*g)*S,t[10]=(r*y*n-f*o*n+f*i*l-e*y*l-r*i*g+e*o*g)*S,t[11]=(a*o*n-r*u*n-a*i*l+e*u*l+r*i*d-e*o*d)*S,t[12]=F*S,t[13]=(a*y*s-f*u*s+f*i*p-e*y*p-a*i*m+e*u*m)*S,t[14]=(f*o*s-r*y*s-f*i*h+e*y*h+r*i*m-e*o*m)*S,t[15]=(r*u*s-a*o*s+a*i*h-e*u*h-r*i*p+e*o*p)*S,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,r=t.x,o=t.y,h=t.z,l=n*r,a=n*o;return this.set(l*r+i,l*o-s*h,l*h+s*o,0,l*o+s*h,a*o+i,a*h-s*r,0,l*h-s*o,a*h+s*r,n*h*h+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,r){return this.set(1,i,n,0,t,1,r,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,r=e._y,o=e._z,h=e._w,l=n+n,a=r+r,u=o+o,p=n*l,d=n*a,f=n*u,y=r*a,m=r*u,g=o*u,_=h*l,M=h*a,b=h*u,F=i.x,P=i.y,S=i.z;return s[0]=(1-(y+g))*F,s[1]=(d+b)*F,s[2]=(f-M)*F,s[3]=0,s[4]=(d-b)*P,s[5]=(1-(p+g))*P,s[6]=(m+_)*P,s[7]=0,s[8]=(f+M)*S,s[9]=(m-_)*S,s[10]=(1-(p+y))*S,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=jt.set(s[0],s[1],s[2]).length();const r=jt.set(s[4],s[5],s[6]).length(),o=jt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],wt.copy(this);const l=1/n,a=1/r,u=1/o;return wt.elements[0]*=l,wt.elements[1]*=l,wt.elements[2]*=l,wt.elements[4]*=a,wt.elements[5]*=a,wt.elements[6]*=a,wt.elements[8]*=u,wt.elements[9]*=u,wt.elements[10]*=u,e.setFromRotationMatrix(wt),i.x=n,i.y=r,i.z=o,this}makePerspective(t,e,i,s,n,r,o=2e3){const h=this.elements,l=2*n/(e-t),a=2*n/(i-s),u=(e+t)/(e-t),p=(i+s)/(i-s);let d,f;if(o===2e3)d=-(r+n)/(r-n),f=-2*r*n/(r-n);else if(o===2001)d=-r/(r-n),f=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return h[0]=l,h[4]=0,h[8]=u,h[12]=0,h[1]=0,h[5]=a,h[9]=p,h[13]=0,h[2]=0,h[6]=0,h[10]=d,h[14]=f,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,i,s,n,r,o=2e3){const h=this.elements,l=1/(e-t),a=1/(i-s),u=1/(r-n),p=(e+t)*l,d=(i+s)*a;let f,y;if(o===2e3)f=(r+n)*u,y=-2*u;else if(o===2001)f=n*u,y=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return h[0]=2*l,h[4]=0,h[8]=0,h[12]=-p,h[1]=0,h[5]=2*a,h[9]=0,h[13]=-d,h[2]=0,h[6]=0,h[10]=y,h[14]=-f,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const jt=new x,wt=new yt,Ts=new x(0,0,0),Bs=new x(1,1,1),Ut=new x,ke=new x,dt=new x,qi=new yt,Ji=new Se;class ve{constructor(t=0,e=0,i=0,s=ve.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],r=s[4],o=s[8],h=s[1],l=s[5],a=s[9],u=s[2],p=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(I(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-a,d),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(p,l),this._z=0);break;case"YXZ":this._x=Math.asin(-I(a,-1,1)),Math.abs(a)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(h,l)):(this._y=Math.atan2(-u,n),this._z=0);break;case"ZXY":this._x=Math.asin(I(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-r,l)):(this._y=0,this._z=Math.atan2(h,n));break;case"ZYX":this._y=Math.asin(-I(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(p,d),this._z=Math.atan2(h,n)):(this._x=0,this._z=Math.atan2(-r,l));break;case"YZX":this._z=Math.asin(I(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-a,l),this._y=Math.atan2(-u,n)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-I(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(p,l),this._y=Math.atan2(o,n)):(this._x=Math.atan2(-a,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return qi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(qi,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Ji.setFromEuler(this),this.setFromQuaternion(Ji,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ve.DEFAULT_ORDER="XYZ";class Es{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let ks=0;const Hi=new x,Kt=new Se,Et=new yt,Pe=new x,me=new x,Ps=new x,Rs=new Se,Zi=new x(1,0,0),Gi=new x(0,1,0),Xi=new x(0,0,1),Yi={type:"added"},Os={type:"removed"},te={type:"childadded",child:null},hi={type:"childremoved",child:null};class Ot extends Xe{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ks++}),this.uuid=ce(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ot.DEFAULT_UP.clone();const t=new x,e=new ve,i=new Se,s=new x(1,1,1);function n(){i.setFromEuler(e,!1)}function r(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new yt},normalMatrix:{value:new Nt}}),this.matrix=new yt,this.matrixWorld=new yt,this.matrixAutoUpdate=Ot.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ot.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Es,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Kt.setFromAxisAngle(t,e),this.quaternion.multiply(Kt),this}rotateOnWorldAxis(t,e){return Kt.setFromAxisAngle(t,e),this.quaternion.premultiply(Kt),this}rotateX(t){return this.rotateOnAxis(Zi,t)}rotateY(t){return this.rotateOnAxis(Gi,t)}rotateZ(t){return this.rotateOnAxis(Xi,t)}translateOnAxis(t,e){return Hi.copy(t).applyQuaternion(this.quaternion),this.position.add(Hi.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Zi,t)}translateY(t){return this.translateOnAxis(Gi,t)}translateZ(t){return this.translateOnAxis(Xi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Et.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?Pe.copy(t):Pe.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),me.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Et.lookAt(me,Pe,this.up):Et.lookAt(Pe,me,this.up),this.quaternion.setFromRotationMatrix(Et),s&&(Et.extractRotation(s.matrixWorld),Kt.setFromRotationMatrix(Et),this.quaternion.premultiply(Kt.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Yi),te.child=t,this.dispatchEvent(te),te.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Os),hi.child=t,this.dispatchEvent(hi),hi.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Et.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Et.multiply(t.parent.matrixWorld)),t.applyMatrix4(Et),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Yi),te.child=t,this.dispatchEvent(te),te.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const r=this.children[i].getObjectByProperty(t,e);if(r!==void 0)return r}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(me,t,Ps),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(me,Rs,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function n(o,h){return o[h.uuid]===void 0&&(o[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const h=o.shapes;if(Array.isArray(h))for(let l=0,a=h.length;l<a;l++){const u=h[l];n(t.shapes,u)}else n(t.shapes,h)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let h=0,l=this.material.length;h<l;h++)o.push(n(t.materials,this.material[h]));s.material=o}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const h=this.animations[o];s.animations.push(n(t.animations,h))}}if(e){const o=r(t.geometries),h=r(t.materials),l=r(t.textures),a=r(t.images),u=r(t.shapes),p=r(t.skeletons),d=r(t.animations),f=r(t.nodes);o.length>0&&(i.geometries=o),h.length>0&&(i.materials=h),l.length>0&&(i.textures=l),a.length>0&&(i.images=a),u.length>0&&(i.shapes=u),p.length>0&&(i.skeletons=p),d.length>0&&(i.animations=d),f.length>0&&(i.nodes=f)}return i.object=s,i;function r(o){const h=[];for(const l in o){const a=o[l];delete a.metadata,h.push(a)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}Ot.DEFAULT_UP=new x(0,1,0);Ot.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ot.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Mt=new x,kt=new x,ai=new x,Pt=new x,ee=new x,ie=new x,$i=new x,li=new x,ci=new x,ui=new x,pi=new Ae,di=new Ae,fi=new Ae;class At{constructor(t=new x,e=new x,i=new x){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),Mt.subVectors(t,e),s.cross(Mt);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,e,i,s,n){Mt.subVectors(s,e),kt.subVectors(i,e),ai.subVectors(t,e);const r=Mt.dot(Mt),o=Mt.dot(kt),h=Mt.dot(ai),l=kt.dot(kt),a=kt.dot(ai),u=r*l-o*o;if(u===0)return n.set(0,0,0),null;const p=1/u,d=(l*h-o*a)*p,f=(r*a-o*h)*p;return n.set(1-d-f,f,d)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,Pt)===null?!1:Pt.x>=0&&Pt.y>=0&&Pt.x+Pt.y<=1}static getInterpolation(t,e,i,s,n,r,o,h){return this.getBarycoord(t,e,i,s,Pt)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(n,Pt.x),h.addScaledVector(r,Pt.y),h.addScaledVector(o,Pt.z),h)}static getInterpolatedAttribute(t,e,i,s,n,r){return pi.setScalar(0),di.setScalar(0),fi.setScalar(0),pi.fromBufferAttribute(t,e),di.fromBufferAttribute(t,i),fi.fromBufferAttribute(t,s),r.setScalar(0),r.addScaledVector(pi,n.x),r.addScaledVector(di,n.y),r.addScaledVector(fi,n.z),r}static isFrontFacing(t,e,i,s){return Mt.subVectors(i,e),kt.subVectors(t,e),Mt.cross(kt).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Mt.subVectors(this.c,this.b),kt.subVectors(this.a,this.b),Mt.cross(kt).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return At.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return At.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,s,n){return At.getInterpolation(t,this.a,this.b,this.c,e,i,s,n)}containsPoint(t){return At.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return At.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,n=this.c;let r,o;ee.subVectors(s,i),ie.subVectors(n,i),li.subVectors(t,i);const h=ee.dot(li),l=ie.dot(li);if(h<=0&&l<=0)return e.copy(i);ci.subVectors(t,s);const a=ee.dot(ci),u=ie.dot(ci);if(a>=0&&u<=a)return e.copy(s);const p=h*u-a*l;if(p<=0&&h>=0&&a<=0)return r=h/(h-a),e.copy(i).addScaledVector(ee,r);ui.subVectors(t,n);const d=ee.dot(ui),f=ie.dot(ui);if(f>=0&&d<=f)return e.copy(n);const y=d*l-h*f;if(y<=0&&l>=0&&f<=0)return o=l/(l-f),e.copy(i).addScaledVector(ie,o);const m=a*f-d*u;if(m<=0&&u-a>=0&&d-f>=0)return $i.subVectors(n,s),o=(u-a)/(u-a+(d-f)),e.copy(s).addScaledVector($i,o);const g=1/(m+y+p);return r=y*g,o=p*g,e.copy(i).addScaledVector(ee,r).addScaledVector(ie,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const ls={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Vt={h:0,s:0,l:0},Re={h:0,s:0,l:0};function yi(c,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?c+(t-c)*6*e:e<1/2?t:e<2/3?c+(t-c)*6*(2/3-e):c}class ae{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=zt){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,gt.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=gt.workingColorSpace){return this.r=t,this.g=e,this.b=i,gt.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=gt.workingColorSpace){if(t=ws(t,1),e=I(e,0,1),i=I(i,0,1),e===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=yi(r,n,t+1/3),this.g=yi(r,n,t),this.b=yi(r,n,t-1/3)}return gt.toWorkingColorSpace(this,s),this}setStyle(t,e=zt){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const r=s[1],o=s[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],r=n.length;if(r===3)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(r===6)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=zt){const i=ls[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Rt(t.r),this.g=Rt(t.g),this.b=Rt(t.b),this}copyLinearToSRGB(t){return this.r=re(t.r),this.g=re(t.g),this.b=re(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=zt){return gt.fromWorkingColorSpace(st.copy(this),t),Math.round(I(st.r*255,0,255))*65536+Math.round(I(st.g*255,0,255))*256+Math.round(I(st.b*255,0,255))}getHexString(t=zt){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=gt.workingColorSpace){gt.fromWorkingColorSpace(st.copy(this),e);const i=st.r,s=st.g,n=st.b,r=Math.max(i,s,n),o=Math.min(i,s,n);let h,l;const a=(o+r)/2;if(o===r)h=0,l=0;else{const u=r-o;switch(l=a<=.5?u/(r+o):u/(2-r-o),r){case i:h=(s-n)/u+(s<n?6:0);break;case s:h=(n-i)/u+2;break;case n:h=(i-s)/u+4;break}h/=6}return t.h=h,t.s=l,t.l=a,t}getRGB(t,e=gt.workingColorSpace){return gt.fromWorkingColorSpace(st.copy(this),e),t.r=st.r,t.g=st.g,t.b=st.b,t}getStyle(t=zt){gt.fromWorkingColorSpace(st.copy(this),t);const e=st.r,i=st.g,s=st.b;return t!==zt?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(t,e,i){return this.getHSL(Vt),this.setHSL(Vt.h+t,Vt.s+e,Vt.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(Vt),t.getHSL(Re);const i=je(Vt.h,Re.h,e),s=je(Vt.s,Re.s,e),n=je(Vt.l,Re.l,e);return this.setHSL(i,s,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,s=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*s,this.g=n[1]*e+n[4]*i+n[7]*s,this.b=n[2]*e+n[5]*i+n[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const st=new ae;ae.NAMES=ls;let Ns=0;class Is extends Xe{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Ns++}),this.uuid=ce(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ae(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(i.blending=this.blending),this.side!==0&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==204&&(i.blendSrc=this.blendSrc),this.blendDst!==205&&(i.blendDst=this.blendDst),this.blendEquation!==100&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==3&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==519&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==7680&&(i.stencilFail=this.stencilFail),this.stencilZFail!==7680&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==7680&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(n){const r=[];for(const o in n){const h=n[o];delete h.metadata,r.push(h)}return r}if(e){const n=s(t.textures),r=s(t.images);n.length>0&&(i.textures=n),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let n=0;n!==s;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Ai extends Is{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ve,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const $=new x,Oe=new T;let Ds=0;class at{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Ds++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=35044,this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)Oe.fromBufferAttribute(this,e),Oe.applyMatrix3(t),this.setXY(e,Oe.x,Oe.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)$.fromBufferAttribute(this,e),$.applyMatrix3(t),this.setXYZ(e,$.x,$.y,$.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)$.fromBufferAttribute(this,e),$.applyMatrix4(t),this.setXYZ(e,$.x,$.y,$.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)$.fromBufferAttribute(this,e),$.applyNormalMatrix(t),this.setXYZ(e,$.x,$.y,$.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)$.fromBufferAttribute(this,e),$.transformDirection(t),this.setXYZ(e,$.x,$.y,$.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=de(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=ht(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=de(e,this.array)),e}setX(t,e){return this.normalized&&(e=ht(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=de(e,this.array)),e}setY(t,e){return this.normalized&&(e=ht(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=de(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ht(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=de(e,this.array)),e}setW(t,e){return this.normalized&&(e=ht(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=ht(e,this.array),i=ht(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=ht(e,this.array),i=ht(i,this.array),s=ht(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=ht(e,this.array),i=ht(i,this.array),s=ht(s,this.array),n=ht(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),t}}class Ls extends at{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Us extends at{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class oe extends at{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Vs=0;const mt=new yt,mi=new Ot,se=new x,ft=new ue,xe=new ue,j=new x;class vt extends Xe{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Vs++}),this.uuid=ce(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ms(t)?Us:Ls)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new Nt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return mt.makeRotationFromQuaternion(t),this.applyMatrix4(mt),this}rotateX(t){return mt.makeRotationX(t),this.applyMatrix4(mt),this}rotateY(t){return mt.makeRotationY(t),this.applyMatrix4(mt),this}rotateZ(t){return mt.makeRotationZ(t),this.applyMatrix4(mt),this}translate(t,e,i){return mt.makeTranslation(t,e,i),this.applyMatrix4(mt),this}scale(t,e,i){return mt.makeScale(t,e,i),this.applyMatrix4(mt),this}lookAt(t){return mi.lookAt(t),mi.updateMatrix(),this.applyMatrix4(mi.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(se).negate(),this.translate(se.x,se.y,se.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const i=[];for(let s=0,n=t.length;s<n;s++){const r=t[s];i.push(r.x,r.y,r.z||0)}this.setAttribute("position",new oe(i,3))}else{const i=Math.min(t.length,e.count);for(let s=0;s<i;s++){const n=t[s];e.setXYZ(s,n.x,n.y,n.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ue);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new x(-1/0,-1/0,-1/0),new x(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];ft.setFromBufferAttribute(n),this.morphTargetsRelative?(j.addVectors(this.boundingBox.min,ft.min),this.boundingBox.expandByPoint(j),j.addVectors(this.boundingBox.max,ft.max),this.boundingBox.expandByPoint(j)):(this.boundingBox.expandByPoint(ft.min),this.boundingBox.expandByPoint(ft.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new as);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new x,1/0);return}if(t){const i=this.boundingSphere.center;if(ft.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const o=e[n];xe.setFromBufferAttribute(o),this.morphTargetsRelative?(j.addVectors(ft.min,xe.min),ft.expandByPoint(j),j.addVectors(ft.max,xe.max),ft.expandByPoint(j)):(ft.expandByPoint(xe.min),ft.expandByPoint(xe.max))}ft.getCenter(i);let s=0;for(let n=0,r=t.count;n<r;n++)j.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(j));if(e)for(let n=0,r=e.length;n<r;n++){const o=e[n],h=this.morphTargetsRelative;for(let l=0,a=o.count;l<a;l++)j.fromBufferAttribute(o,l),h&&(se.fromBufferAttribute(t,l),j.add(se)),s=Math.max(s,i.distanceToSquared(j))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,s=e.normal,n=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new at(new Float32Array(4*i.count),4));const r=this.getAttribute("tangent"),o=[],h=[];for(let w=0;w<i.count;w++)o[w]=new x,h[w]=new x;const l=new x,a=new x,u=new x,p=new T,d=new T,f=new T,y=new x,m=new x;function g(w,R,B){l.fromBufferAttribute(i,w),a.fromBufferAttribute(i,R),u.fromBufferAttribute(i,B),p.fromBufferAttribute(n,w),d.fromBufferAttribute(n,R),f.fromBufferAttribute(n,B),a.sub(l),u.sub(l),d.sub(p),f.sub(p);const E=1/(d.x*f.y-f.x*d.y);isFinite(E)&&(y.copy(a).multiplyScalar(f.y).addScaledVector(u,-d.y).multiplyScalar(E),m.copy(u).multiplyScalar(d.x).addScaledVector(a,-f.x).multiplyScalar(E),o[w].add(y),o[R].add(y),o[B].add(y),h[w].add(m),h[R].add(m),h[B].add(m))}let _=this.groups;_.length===0&&(_=[{start:0,count:t.count}]);for(let w=0,R=_.length;w<R;++w){const B=_[w],E=B.start,D=B.count;for(let U=E,O=E+D;U<O;U+=3)g(t.getX(U+0),t.getX(U+1),t.getX(U+2))}const M=new x,b=new x,F=new x,P=new x;function S(w){F.fromBufferAttribute(s,w),P.copy(F);const R=o[w];M.copy(R),M.sub(F.multiplyScalar(F.dot(R))).normalize(),b.crossVectors(P,R);const E=b.dot(h[w])<0?-1:1;r.setXYZW(w,M.x,M.y,M.z,E)}for(let w=0,R=_.length;w<R;++w){const B=_[w],E=B.start,D=B.count;for(let U=E,O=E+D;U<O;U+=3)S(t.getX(U+0)),S(t.getX(U+1)),S(t.getX(U+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new at(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let p=0,d=i.count;p<d;p++)i.setXYZ(p,0,0,0);const s=new x,n=new x,r=new x,o=new x,h=new x,l=new x,a=new x,u=new x;if(t)for(let p=0,d=t.count;p<d;p+=3){const f=t.getX(p+0),y=t.getX(p+1),m=t.getX(p+2);s.fromBufferAttribute(e,f),n.fromBufferAttribute(e,y),r.fromBufferAttribute(e,m),a.subVectors(r,n),u.subVectors(s,n),a.cross(u),o.fromBufferAttribute(i,f),h.fromBufferAttribute(i,y),l.fromBufferAttribute(i,m),o.add(a),h.add(a),l.add(a),i.setXYZ(f,o.x,o.y,o.z),i.setXYZ(y,h.x,h.y,h.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let p=0,d=e.count;p<d;p+=3)s.fromBufferAttribute(e,p+0),n.fromBufferAttribute(e,p+1),r.fromBufferAttribute(e,p+2),a.subVectors(r,n),u.subVectors(s,n),a.cross(u),i.setXYZ(p+0,a.x,a.y,a.z),i.setXYZ(p+1,a.x,a.y,a.z),i.setXYZ(p+2,a.x,a.y,a.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)j.fromBufferAttribute(t,e),j.normalize(),t.setXYZ(e,j.x,j.y,j.z)}toNonIndexed(){function t(o,h){const l=o.array,a=o.itemSize,u=o.normalized,p=new l.constructor(h.length*a);let d=0,f=0;for(let y=0,m=h.length;y<m;y++){o.isInterleavedBufferAttribute?d=h[y]*o.data.stride+o.offset:d=h[y]*a;for(let g=0;g<a;g++)p[f++]=l[d++]}return new at(p,a,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new vt,i=this.index.array,s=this.attributes;for(const o in s){const h=s[o],l=t(h,i);e.setAttribute(o,l)}const n=this.morphAttributes;for(const o in n){const h=[],l=n[o];for(let a=0,u=l.length;a<u;a++){const p=l[a],d=t(p,i);h.push(d)}e.morphAttributes[o]=h}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let o=0,h=r.length;o<h;o++){const l=r[o];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const l in h)h[l]!==void 0&&(t[l]=h[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const h in i){const l=i[h];t.data.attributes[h]=l.toJSON(t.data)}const s={};let n=!1;for(const h in this.morphAttributes){const l=this.morphAttributes[h],a=[];for(let u=0,p=l.length;u<p;u++){const d=l[u];a.push(d.toJSON(t.data))}a.length>0&&(s[h]=a,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const l in s){const a=s[l];this.setAttribute(l,a.clone(e))}const n=t.morphAttributes;for(const l in n){const a=[],u=n[l];for(let p=0,d=u.length;p<d;p++)a.push(u[p].clone(e));this.morphAttributes[l]=a}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let l=0,a=r.length;l<a;l++){const u=r[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Qi=new yt,Jt=new Cs,Ne=new as,ji=new x,Ie=new x,De=new x,Le=new x,xi=new x,Ue=new x,Ki=new x,Ve=new x;class Si extends Ot{constructor(t=new vt,e=new Ai){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const o=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=n}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,n=i.morphAttributes.position,r=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const o=this.morphTargetInfluences;if(n&&o){Ue.set(0,0,0);for(let h=0,l=n.length;h<l;h++){const a=o[h],u=n[h];a!==0&&(xi.fromBufferAttribute(u,t),r?Ue.addScaledVector(xi,a):Ue.addScaledVector(xi.sub(e),a))}e.add(Ue)}return e}raycast(t,e){const i=this.geometry,s=this.material,n=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Ne.copy(i.boundingSphere),Ne.applyMatrix4(n),Jt.copy(t.ray).recast(t.near),!(Ne.containsPoint(Jt.origin)===!1&&(Jt.intersectSphere(Ne,ji)===null||Jt.origin.distanceToSquared(ji)>(t.far-t.near)**2))&&(Qi.copy(n).invert(),Jt.copy(t.ray).applyMatrix4(Qi),!(i.boundingBox!==null&&Jt.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,Jt)))}_computeIntersections(t,e,i){let s;const n=this.geometry,r=this.material,o=n.index,h=n.attributes.position,l=n.attributes.uv,a=n.attributes.uv1,u=n.attributes.normal,p=n.groups,d=n.drawRange;if(o!==null)if(Array.isArray(r))for(let f=0,y=p.length;f<y;f++){const m=p[f],g=r[m.materialIndex],_=Math.max(m.start,d.start),M=Math.min(o.count,Math.min(m.start+m.count,d.start+d.count));for(let b=_,F=M;b<F;b+=3){const P=o.getX(b),S=o.getX(b+1),w=o.getX(b+2);s=We(this,g,t,i,l,a,u,P,S,w),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=m.materialIndex,e.push(s))}}else{const f=Math.max(0,d.start),y=Math.min(o.count,d.start+d.count);for(let m=f,g=y;m<g;m+=3){const _=o.getX(m),M=o.getX(m+1),b=o.getX(m+2);s=We(this,r,t,i,l,a,u,_,M,b),s&&(s.faceIndex=Math.floor(m/3),e.push(s))}}else if(h!==void 0)if(Array.isArray(r))for(let f=0,y=p.length;f<y;f++){const m=p[f],g=r[m.materialIndex],_=Math.max(m.start,d.start),M=Math.min(h.count,Math.min(m.start+m.count,d.start+d.count));for(let b=_,F=M;b<F;b+=3){const P=b,S=b+1,w=b+2;s=We(this,g,t,i,l,a,u,P,S,w),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=m.materialIndex,e.push(s))}}else{const f=Math.max(0,d.start),y=Math.min(h.count,d.start+d.count);for(let m=f,g=y;m<g;m+=3){const _=m,M=m+1,b=m+2;s=We(this,r,t,i,l,a,u,_,M,b),s&&(s.faceIndex=Math.floor(m/3),e.push(s))}}}}function Ws(c,t,e,i,s,n,r,o){let h;if(t.side===1?h=i.intersectTriangle(r,n,s,!0,o):h=i.intersectTriangle(s,n,r,t.side===0,o),h===null)return null;Ve.copy(o),Ve.applyMatrix4(c.matrixWorld);const l=e.ray.origin.distanceTo(Ve);return l<e.near||l>e.far?null:{distance:l,point:Ve.clone(),object:c}}function We(c,t,e,i,s,n,r,o,h,l){c.getVertexPosition(o,Ie),c.getVertexPosition(h,De),c.getVertexPosition(l,Le);const a=Ws(c,t,e,i,Ie,De,Le,Ki);if(a){const u=new x;At.getBarycoord(Ki,Ie,De,Le,u),s&&(a.uv=At.getInterpolatedAttribute(s,o,h,l,u,new T)),n&&(a.uv1=At.getInterpolatedAttribute(n,o,h,l,u,new T)),r&&(a.normal=At.getInterpolatedAttribute(r,o,h,l,u,new x),a.normal.dot(i.direction)>0&&a.normal.multiplyScalar(-1));const p={a:o,b:h,c:l,normal:new x,materialIndex:0};At.getNormal(Ie,De,Le,p.normal),a.face=p,a.barycoord=u}return a}class Ci extends vt{constructor(t=1,e=1,i=1,s=1,n=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:s,heightSegments:n,depthSegments:r};const o=this;s=Math.floor(s),n=Math.floor(n),r=Math.floor(r);const h=[],l=[],a=[],u=[];let p=0,d=0;f("z","y","x",-1,-1,i,e,t,r,n,0),f("z","y","x",1,-1,i,e,-t,r,n,1),f("x","z","y",1,1,t,i,e,s,r,2),f("x","z","y",1,-1,t,i,-e,s,r,3),f("x","y","z",1,-1,t,e,i,s,n,4),f("x","y","z",-1,-1,t,e,-i,s,n,5),this.setIndex(h),this.setAttribute("position",new oe(l,3)),this.setAttribute("normal",new oe(a,3)),this.setAttribute("uv",new oe(u,2));function f(y,m,g,_,M,b,F,P,S,w,R){const B=b/S,E=F/w,D=b/2,U=F/2,O=P/2,V=S+1,G=w+1;let Q=0,nt=0;const N=new x;for(let H=0;H<G;H++){const J=H*E-U;for(let K=0;K<V;K++){const L=K*B-D;N[y]=L*_,N[m]=J*M,N[g]=O,l.push(N.x,N.y,N.z),N[y]=0,N[m]=0,N[g]=P>0?1:-1,a.push(N.x,N.y,N.z),u.push(K/S),u.push(1-H/w),Q+=1}}for(let H=0;H<w;H++)for(let J=0;J<S;J++){const K=p+J+V*H,L=p+J+V*(H+1),ct=p+(J+1)+V*(H+1),xt=p+(J+1)+V*H;h.push(K,L,xt),h.push(L,ct,xt),nt+=6}o.addGroup(d,nt,R),d+=nt,p+=Q}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ci(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}class _t{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let i,s=this.getPoint(0),n=0;e.push(0);for(let r=1;r<=t;r++)i=this.getPoint(r/t),n+=i.distanceTo(s),e.push(n),s=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const i=this.getLengths();let s=0;const n=i.length;let r;e?r=e:r=t*i[n-1];let o=0,h=n-1,l;for(;o<=h;)if(s=Math.floor(o+(h-o)/2),l=i[s]-r,l<0)o=s+1;else if(l>0)h=s-1;else{h=s;break}if(s=h,i[s]===r)return s/(n-1);const a=i[s],p=i[s+1]-a,d=(r-a)/p;return(s+d)/(n-1)}getTangent(t,e){let s=t-1e-4,n=t+1e-4;s<0&&(s=0),n>1&&(n=1);const r=this.getPoint(s),o=this.getPoint(n),h=e||(r.isVector2?new T:new x);return h.copy(o).sub(r).normalize(),h}getTangentAt(t,e){const i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e=!1){const i=new x,s=[],n=[],r=[],o=new x,h=new yt;for(let d=0;d<=t;d++){const f=d/t;s[d]=this.getTangentAt(f,new x)}n[0]=new x,r[0]=new x;let l=Number.MAX_VALUE;const a=Math.abs(s[0].x),u=Math.abs(s[0].y),p=Math.abs(s[0].z);a<=l&&(l=a,i.set(1,0,0)),u<=l&&(l=u,i.set(0,1,0)),p<=l&&i.set(0,0,1),o.crossVectors(s[0],i).normalize(),n[0].crossVectors(s[0],o),r[0].crossVectors(s[0],n[0]);for(let d=1;d<=t;d++){if(n[d]=n[d-1].clone(),r[d]=r[d-1].clone(),o.crossVectors(s[d-1],s[d]),o.length()>Number.EPSILON){o.normalize();const f=Math.acos(I(s[d-1].dot(s[d]),-1,1));n[d].applyMatrix4(h.makeRotationAxis(o,f))}r[d].crossVectors(s[d],n[d])}if(e===!0){let d=Math.acos(I(n[0].dot(n[t]),-1,1));d/=t,s[0].dot(o.crossVectors(n[0],n[t]))>0&&(d=-d);for(let f=1;f<=t;f++)n[f].applyMatrix4(h.makeRotationAxis(s[f],d*f)),r[f].crossVectors(s[f],n[f])}return{tangents:s,normals:n,binormals:r}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Ti extends _t{constructor(t=0,e=0,i=1,s=1,n=0,r=Math.PI*2,o=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=s,this.aStartAngle=n,this.aEndAngle=r,this.aClockwise=o,this.aRotation=h}getPoint(t,e=new T){const i=e,s=Math.PI*2;let n=this.aEndAngle-this.aStartAngle;const r=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=s;for(;n>s;)n-=s;n<Number.EPSILON&&(r?n=0:n=s),this.aClockwise===!0&&!r&&(n===s?n=-s:n=n-s);const o=this.aStartAngle+t*n;let h=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const a=Math.cos(this.aRotation),u=Math.sin(this.aRotation),p=h-this.aX,d=l-this.aY;h=p*a-d*u+this.aX,l=p*u+d*a+this.aY}return i.set(h,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class qs extends Ti{constructor(t,e,i,s,n,r){super(t,e,i,i,s,n,r),this.isArcCurve=!0,this.type="ArcCurve"}}function Bi(){let c=0,t=0,e=0,i=0;function s(n,r,o,h){c=n,t=o,e=-3*n+3*r-2*o-h,i=2*n-2*r+o+h}return{initCatmullRom:function(n,r,o,h,l){s(r,o,l*(o-n),l*(h-r))},initNonuniformCatmullRom:function(n,r,o,h,l,a,u){let p=(r-n)/l-(o-n)/(l+a)+(o-r)/a,d=(o-r)/a-(h-r)/(a+u)+(h-o)/u;p*=a,d*=a,s(r,o,p,d)},calc:function(n){const r=n*n,o=r*n;return c+t*n+e*r+i*o}}}const qe=new x,gi=new Bi,bi=new Bi,wi=new Bi;class Js extends _t{constructor(t=[],e=!1,i="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=s}getPoint(t,e=new x){const i=e,s=this.points,n=s.length,r=(n-(this.closed?0:1))*t;let o=Math.floor(r),h=r-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/n)+1)*n:h===0&&o===n-1&&(o=n-2,h=1);let l,a;this.closed||o>0?l=s[(o-1)%n]:(qe.subVectors(s[0],s[1]).add(s[0]),l=qe);const u=s[o%n],p=s[(o+1)%n];if(this.closed||o+2<n?a=s[(o+2)%n]:(qe.subVectors(s[n-1],s[n-2]).add(s[n-1]),a=qe),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let f=Math.pow(l.distanceToSquared(u),d),y=Math.pow(u.distanceToSquared(p),d),m=Math.pow(p.distanceToSquared(a),d);y<1e-4&&(y=1),f<1e-4&&(f=y),m<1e-4&&(m=y),gi.initNonuniformCatmullRom(l.x,u.x,p.x,a.x,f,y,m),bi.initNonuniformCatmullRom(l.y,u.y,p.y,a.y,f,y,m),wi.initNonuniformCatmullRom(l.z,u.z,p.z,a.z,f,y,m)}else this.curveType==="catmullrom"&&(gi.initCatmullRom(l.x,u.x,p.x,a.x,this.tension),bi.initCatmullRom(l.y,u.y,p.y,a.y,this.tension),wi.initCatmullRom(l.z,u.z,p.z,a.z,this.tension));return i.set(gi.calc(h),bi.calc(h),wi.calc(h)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const s=t.points[e];this.points.push(s.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const s=this.points[e];t.points.push(s.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const s=t.points[e];this.points.push(new x().fromArray(s))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function ts(c,t,e,i,s){const n=(i-t)*.5,r=(s-e)*.5,o=c*c,h=c*o;return(2*e-2*i+n+r)*h+(-3*e+3*i-2*n-r)*o+n*c+e}function Hs(c,t){const e=1-c;return e*e*t}function Zs(c,t){return 2*(1-c)*c*t}function Gs(c,t){return c*c*t}function ge(c,t,e,i){return Hs(c,t)+Zs(c,e)+Gs(c,i)}function Xs(c,t){const e=1-c;return e*e*e*t}function Ys(c,t){const e=1-c;return 3*e*e*c*t}function $s(c,t){return 3*(1-c)*c*c*t}function Qs(c,t){return c*c*c*t}function be(c,t,e,i,s){return Xs(c,t)+Ys(c,e)+$s(c,i)+Qs(c,s)}class cs extends _t{constructor(t=new T,e=new T,i=new T,s=new T){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=s}getPoint(t,e=new T){const i=e,s=this.v0,n=this.v1,r=this.v2,o=this.v3;return i.set(be(t,s.x,n.x,r.x,o.x),be(t,s.y,n.y,r.y,o.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class js extends _t{constructor(t=new x,e=new x,i=new x,s=new x){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=s}getPoint(t,e=new x){const i=e,s=this.v0,n=this.v1,r=this.v2,o=this.v3;return i.set(be(t,s.x,n.x,r.x,o.x),be(t,s.y,n.y,r.y,o.y),be(t,s.z,n.z,r.z,o.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class us extends _t{constructor(t=new T,e=new T){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new T){const i=e;return t===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new T){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ks extends _t{constructor(t=new x,e=new x){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new x){const i=e;return t===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new x){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ps extends _t{constructor(t=new T,e=new T,i=new T){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new T){const i=e,s=this.v0,n=this.v1,r=this.v2;return i.set(ge(t,s.x,n.x,r.x),ge(t,s.y,n.y,r.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class tn extends _t{constructor(t=new x,e=new x,i=new x){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new x){const i=e,s=this.v0,n=this.v1,r=this.v2;return i.set(ge(t,s.x,n.x,r.x),ge(t,s.y,n.y,r.y),ge(t,s.z,n.z,r.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ds extends _t{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new T){const i=e,s=this.points,n=(s.length-1)*t,r=Math.floor(n),o=n-r,h=s[r===0?r:r-1],l=s[r],a=s[r>s.length-2?s.length-1:r+1],u=s[r>s.length-3?s.length-1:r+2];return i.set(ts(o,h.x,l.x,a.x,u.x),ts(o,h.y,l.y,a.y,u.y)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const s=t.points[e];this.points.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const s=this.points[e];t.points.push(s.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const s=t.points[e];this.points.push(new T().fromArray(s))}return this}}var vi=Object.freeze({__proto__:null,ArcCurve:qs,CatmullRomCurve3:Js,CubicBezierCurve:cs,CubicBezierCurve3:js,EllipseCurve:Ti,LineCurve:us,LineCurve3:Ks,QuadraticBezierCurve:ps,QuadraticBezierCurve3:tn,SplineCurve:ds});class en extends _t{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const i=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new vi[i](e,t))}return this}getPoint(t,e){const i=t*this.getLength(),s=this.getCurveLengths();let n=0;for(;n<s.length;){if(s[n]>=i){const r=s[n]-i,o=this.curves[n],h=o.getLength(),l=h===0?0:1-r/h;return o.getPointAt(l,e)}n++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,s=this.curves.length;i<s;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let i;for(let s=0,n=this.curves;s<n.length;s++){const r=n[s],o=r.isEllipseCurve?t*2:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?t*r.points.length:t,h=r.getPoints(o);for(let l=0;l<h.length;l++){const a=h[l];i&&i.equals(a)||(e.push(a),i=a)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const s=t.curves[e];this.curves.push(s.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,i=this.curves.length;e<i;e++){const s=this.curves[e];t.curves.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const s=t.curves[e];this.curves.push(new vi[s.type]().fromJSON(s))}return this}}class es extends en{constructor(t){super(),this.type="Path",this.currentPoint=new T,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const i=new us(this.currentPoint.clone(),new T(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,s){const n=new ps(this.currentPoint.clone(),new T(t,e),new T(i,s));return this.curves.push(n),this.currentPoint.set(i,s),this}bezierCurveTo(t,e,i,s,n,r){const o=new cs(this.currentPoint.clone(),new T(t,e),new T(i,s),new T(n,r));return this.curves.push(o),this.currentPoint.set(n,r),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),i=new ds(e);return this.curves.push(i),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,s,n,r){const o=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+o,e+h,i,s,n,r),this}absarc(t,e,i,s,n,r){return this.absellipse(t,e,i,i,s,n,r),this}ellipse(t,e,i,s,n,r,o,h){const l=this.currentPoint.x,a=this.currentPoint.y;return this.absellipse(t+l,e+a,i,s,n,r,o,h),this}absellipse(t,e,i,s,n,r,o,h){const l=new Ti(t,e,i,s,n,r,o,h);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const a=l.getPoint(1);return this.currentPoint.copy(a),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class fs extends es{constructor(t){super(t),this.uuid=ce(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,s=this.holes.length;i<s;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const s=t.holes[e];this.holes.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,i=this.holes.length;e<i;e++){const s=this.holes[e];t.holes.push(s.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const s=t.holes[e];this.holes.push(new es().fromJSON(s))}return this}}class sn{static triangulate(t,e,i=2){const s=e&&e.length,n=s?e[0]*i:t.length;let r=ys(t,0,n,i,!0);const o=[];if(!r||r.next===r.prev)return o;let h,l,a,u,p,d,f;if(s&&(r=an(t,e,r,i)),t.length>80*i){h=a=t[0],l=u=t[1];for(let y=i;y<n;y+=i)p=t[y],d=t[y+1],p<h&&(h=p),d<l&&(l=d),p>a&&(a=p),d>u&&(u=d);f=Math.max(a-h,u-l),f=f!==0?32767/f:0}return we(r,o,i,h,l,f,0),o}}function ys(c,t,e,i,s){let n,r;if(s===bn(c,t,e,i)>0)for(n=t;n<e;n+=i)r=is(n,c[n],c[n+1],r);else for(n=e-i;n>=t;n-=i)r=is(n,c[n],c[n+1],r);return r&&Ye(r,r.next)&&(ze(r),r=r.next),r}function Gt(c,t){if(!c)return c;t||(t=c);let e=c,i;do if(i=!1,!e.steiner&&(Ye(e,e.next)||Z(e.prev,e,e.next)===0)){if(ze(e),e=t=e.prev,e===e.next)break;i=!0}else e=e.next;while(i||e!==t);return t}function we(c,t,e,i,s,n,r){if(!c)return;!r&&n&&dn(c,i,s,n);let o=c,h,l;for(;c.prev!==c.next;){if(h=c.prev,l=c.next,n?rn(c,i,s,n):nn(c)){t.push(h.i/e|0),t.push(c.i/e|0),t.push(l.i/e|0),ze(c),c=l.next,o=l.next;continue}if(c=l,c===o){r?r===1?(c=on(Gt(c),t,e),we(c,t,e,i,s,n,2)):r===2&&hn(c,t,e,i,s,n):we(Gt(c),t,e,i,s,n,1);break}}}function nn(c){const t=c.prev,e=c,i=c.next;if(Z(t,e,i)>=0)return!1;const s=t.x,n=e.x,r=i.x,o=t.y,h=e.y,l=i.y,a=s<n?s<r?s:r:n<r?n:r,u=o<h?o<l?o:l:h<l?h:l,p=s>n?s>r?s:r:n>r?n:r,d=o>h?o>l?o:l:h>l?h:l;let f=i.next;for(;f!==t;){if(f.x>=a&&f.x<=p&&f.y>=u&&f.y<=d&&ne(s,o,n,h,r,l,f.x,f.y)&&Z(f.prev,f,f.next)>=0)return!1;f=f.next}return!0}function rn(c,t,e,i){const s=c.prev,n=c,r=c.next;if(Z(s,n,r)>=0)return!1;const o=s.x,h=n.x,l=r.x,a=s.y,u=n.y,p=r.y,d=o<h?o<l?o:l:h<l?h:l,f=a<u?a<p?a:p:u<p?u:p,y=o>h?o>l?o:l:h>l?h:l,m=a>u?a>p?a:p:u>p?u:p,g=_i(d,f,t,e,i),_=_i(y,m,t,e,i);let M=c.prevZ,b=c.nextZ;for(;M&&M.z>=g&&b&&b.z<=_;){if(M.x>=d&&M.x<=y&&M.y>=f&&M.y<=m&&M!==s&&M!==r&&ne(o,a,h,u,l,p,M.x,M.y)&&Z(M.prev,M,M.next)>=0||(M=M.prevZ,b.x>=d&&b.x<=y&&b.y>=f&&b.y<=m&&b!==s&&b!==r&&ne(o,a,h,u,l,p,b.x,b.y)&&Z(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;M&&M.z>=g;){if(M.x>=d&&M.x<=y&&M.y>=f&&M.y<=m&&M!==s&&M!==r&&ne(o,a,h,u,l,p,M.x,M.y)&&Z(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;b&&b.z<=_;){if(b.x>=d&&b.x<=y&&b.y>=f&&b.y<=m&&b!==s&&b!==r&&ne(o,a,h,u,l,p,b.x,b.y)&&Z(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function on(c,t,e){let i=c;do{const s=i.prev,n=i.next.next;!Ye(s,n)&&ms(s,i,i.next,n)&&Me(s,n)&&Me(n,s)&&(t.push(s.i/e|0),t.push(i.i/e|0),t.push(n.i/e|0),ze(i),ze(i.next),i=c=n),i=i.next}while(i!==c);return Gt(i)}function hn(c,t,e,i,s,n){let r=c;do{let o=r.next.next;for(;o!==r.prev;){if(r.i!==o.i&&mn(r,o)){let h=xs(r,o);r=Gt(r,r.next),h=Gt(h,h.next),we(r,t,e,i,s,n,0),we(h,t,e,i,s,n,0);return}o=o.next}r=r.next}while(r!==c)}function an(c,t,e,i){const s=[];let n,r,o,h,l;for(n=0,r=t.length;n<r;n++)o=t[n]*i,h=n<r-1?t[n+1]*i:c.length,l=ys(c,o,h,i,!1),l===l.next&&(l.steiner=!0),s.push(yn(l));for(s.sort(ln),n=0;n<s.length;n++)e=cn(s[n],e);return e}function ln(c,t){return c.x-t.x}function cn(c,t){const e=un(c,t);if(!e)return t;const i=xs(e,c);return Gt(i,i.next),Gt(e,e.next)}function un(c,t){let e=t,i=-1/0,s;const n=c.x,r=c.y;do{if(r<=e.y&&r>=e.next.y&&e.next.y!==e.y){const p=e.x+(r-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(p<=n&&p>i&&(i=p,s=e.x<e.next.x?e:e.next,p===n))return s}e=e.next}while(e!==t);if(!s)return null;const o=s,h=s.x,l=s.y;let a=1/0,u;e=s;do n>=e.x&&e.x>=h&&n!==e.x&&ne(r<l?n:i,r,h,l,r<l?i:n,r,e.x,e.y)&&(u=Math.abs(r-e.y)/(n-e.x),Me(e,c)&&(u<a||u===a&&(e.x>s.x||e.x===s.x&&pn(s,e)))&&(s=e,a=u)),e=e.next;while(e!==o);return s}function pn(c,t){return Z(c.prev,c,t.prev)<0&&Z(t.next,c,c.next)<0}function dn(c,t,e,i){let s=c;do s.z===0&&(s.z=_i(s.x,s.y,t,e,i)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==c);s.prevZ.nextZ=null,s.prevZ=null,fn(s)}function fn(c){let t,e,i,s,n,r,o,h,l=1;do{for(e=c,c=null,n=null,r=0;e;){for(r++,i=e,o=0,t=0;t<l&&(o++,i=i.nextZ,!!i);t++);for(h=l;o>0||h>0&&i;)o!==0&&(h===0||!i||e.z<=i.z)?(s=e,e=e.nextZ,o--):(s=i,i=i.nextZ,h--),n?n.nextZ=s:c=s,s.prevZ=n,n=s;e=i}n.nextZ=null,l*=2}while(r>1);return c}function _i(c,t,e,i,s){return c=(c-e)*s|0,t=(t-i)*s|0,c=(c|c<<8)&16711935,c=(c|c<<4)&252645135,c=(c|c<<2)&858993459,c=(c|c<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,c|t<<1}function yn(c){let t=c,e=c;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==c);return e}function ne(c,t,e,i,s,n,r,o){return(s-r)*(t-o)>=(c-r)*(n-o)&&(c-r)*(i-o)>=(e-r)*(t-o)&&(e-r)*(n-o)>=(s-r)*(i-o)}function mn(c,t){return c.next.i!==t.i&&c.prev.i!==t.i&&!xn(c,t)&&(Me(c,t)&&Me(t,c)&&gn(c,t)&&(Z(c.prev,c,t.prev)||Z(c,t.prev,t))||Ye(c,t)&&Z(c.prev,c,c.next)>0&&Z(t.prev,t,t.next)>0)}function Z(c,t,e){return(t.y-c.y)*(e.x-t.x)-(t.x-c.x)*(e.y-t.y)}function Ye(c,t){return c.x===t.x&&c.y===t.y}function ms(c,t,e,i){const s=He(Z(c,t,e)),n=He(Z(c,t,i)),r=He(Z(e,i,c)),o=He(Z(e,i,t));return!!(s!==n&&r!==o||s===0&&Je(c,e,t)||n===0&&Je(c,i,t)||r===0&&Je(e,c,i)||o===0&&Je(e,t,i))}function Je(c,t,e){return t.x<=Math.max(c.x,e.x)&&t.x>=Math.min(c.x,e.x)&&t.y<=Math.max(c.y,e.y)&&t.y>=Math.min(c.y,e.y)}function He(c){return c>0?1:c<0?-1:0}function xn(c,t){let e=c;do{if(e.i!==c.i&&e.next.i!==c.i&&e.i!==t.i&&e.next.i!==t.i&&ms(e,e.next,c,t))return!0;e=e.next}while(e!==c);return!1}function Me(c,t){return Z(c.prev,c,c.next)<0?Z(c,t,c.next)>=0&&Z(c,c.prev,t)>=0:Z(c,t,c.prev)<0||Z(c,c.next,t)<0}function gn(c,t){let e=c,i=!1;const s=(c.x+t.x)/2,n=(c.y+t.y)/2;do e.y>n!=e.next.y>n&&e.next.y!==e.y&&s<(e.next.x-e.x)*(n-e.y)/(e.next.y-e.y)+e.x&&(i=!i),e=e.next;while(e!==c);return i}function xs(c,t){const e=new Fi(c.i,c.x,c.y),i=new Fi(t.i,t.x,t.y),s=c.next,n=t.prev;return c.next=t,t.prev=c,e.next=s,s.prev=e,i.next=e,e.prev=i,n.next=i,i.prev=n,i}function is(c,t,e,i){const s=new Fi(c,t,e);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s}function ze(c){c.next.prev=c.prev,c.prev.next=c.next,c.prevZ&&(c.prevZ.nextZ=c.nextZ),c.nextZ&&(c.nextZ.prevZ=c.prevZ)}function Fi(c,t,e){this.i=c,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function bn(c,t,e,i){let s=0;for(let n=t,r=e-i;n<e;n+=i)s+=(c[r]-c[n])*(c[n+1]+c[r+1]),r=n;return s}class he{static area(t){const e=t.length;let i=0;for(let s=e-1,n=0;n<e;s=n++)i+=t[s].x*t[n].y-t[n].x*t[s].y;return i*.5}static isClockWise(t){return he.area(t)<0}static triangulateShape(t,e){const i=[],s=[],n=[];ss(t),ns(i,t);let r=t.length;e.forEach(ss);for(let h=0;h<e.length;h++)s.push(r),r+=e[h].length,ns(i,e[h]);const o=sn.triangulate(i,s);for(let h=0;h<o.length;h+=3)n.push(o.slice(h,h+3));return n}}function ss(c){const t=c.length;t>2&&c[t-1].equals(c[0])&&c.pop()}function ns(c,t){for(let e=0;e<t.length;e++)c.push(t[e].x),c.push(t[e].y)}class Ei extends vt{constructor(t=new fs([new T(.5,.5),new T(-.5,.5),new T(-.5,-.5),new T(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const i=this,s=[],n=[];for(let o=0,h=t.length;o<h;o++){const l=t[o];r(l)}this.setAttribute("position",new oe(s,3)),this.setAttribute("uv",new oe(n,2)),this.computeVertexNormals();function r(o){const h=[],l=e.curveSegments!==void 0?e.curveSegments:12,a=e.steps!==void 0?e.steps:1,u=e.depth!==void 0?e.depth:1;let p=e.bevelEnabled!==void 0?e.bevelEnabled:!0,d=e.bevelThickness!==void 0?e.bevelThickness:.2,f=e.bevelSize!==void 0?e.bevelSize:d-.1,y=e.bevelOffset!==void 0?e.bevelOffset:0,m=e.bevelSegments!==void 0?e.bevelSegments:3;const g=e.extrudePath,_=e.UVGenerator!==void 0?e.UVGenerator:wn;let M,b=!1,F,P,S,w;g&&(M=g.getSpacedPoints(a),b=!0,p=!1,F=g.computeFrenetFrames(a,!1),P=new x,S=new x,w=new x),p||(m=0,d=0,f=0,y=0);const R=o.extractPoints(l);let B=R.shape;const E=R.holes;if(!he.isClockWise(B)){B=B.reverse();for(let z=0,A=E.length;z<A;z++){const v=E[z];he.isClockWise(v)&&(E[z]=v.reverse())}}const U=he.triangulateShape(B,E),O=B;for(let z=0,A=E.length;z<A;z++){const v=E[z];B=B.concat(v)}function V(z,A,v){return A||console.error("THREE.ExtrudeGeometry: vec does not exist"),z.clone().addScaledVector(A,v)}const G=B.length,Q=U.length;function nt(z,A,v){let k,C,W;const q=z.x-A.x,X=z.y-A.y,rt=v.x-z.x,et=v.y-z.y,pe=q*q+X*X,$e=q*et-X*rt;if(Math.abs($e)>Number.EPSILON){const Ct=Math.sqrt(pe),ki=Math.sqrt(rt*rt+et*et),Pi=A.x-X/Ct,Ri=A.y+q/Ct,gs=v.x-et/ki,bs=v.y+rt/ki,Oi=((gs-Pi)*et-(bs-Ri)*rt)/(q*et-X*rt);k=Pi+q*Oi-z.x,C=Ri+X*Oi-z.y;const Ni=k*k+C*C;if(Ni<=2)return new T(k,C);W=Math.sqrt(Ni/2)}else{let Ct=!1;q>Number.EPSILON?rt>Number.EPSILON&&(Ct=!0):q<-Number.EPSILON?rt<-Number.EPSILON&&(Ct=!0):Math.sign(X)===Math.sign(et)&&(Ct=!0),Ct?(k=-X,C=q,W=Math.sqrt(pe)):(k=q,C=X,W=Math.sqrt(pe/2))}return new T(k/W,C/W)}const N=[];for(let z=0,A=O.length,v=A-1,k=z+1;z<A;z++,v++,k++)v===A&&(v=0),k===A&&(k=0),N[z]=nt(O[z],O[v],O[k]);const H=[];let J,K=N.concat();for(let z=0,A=E.length;z<A;z++){const v=E[z];J=[];for(let k=0,C=v.length,W=C-1,q=k+1;k<C;k++,W++,q++)W===C&&(W=0),q===C&&(q=0),J[k]=nt(v[k],v[W],v[q]);H.push(J),K=K.concat(J)}for(let z=0;z<m;z++){const A=z/m,v=d*Math.cos(A*Math.PI/2),k=f*Math.sin(A*Math.PI/2)+y;for(let C=0,W=O.length;C<W;C++){const q=V(O[C],N[C],k);ot(q.x,q.y,-v)}for(let C=0,W=E.length;C<W;C++){const q=E[C];J=H[C];for(let X=0,rt=q.length;X<rt;X++){const et=V(q[X],J[X],k);ot(et.x,et.y,-v)}}}const L=f+y;for(let z=0;z<G;z++){const A=p?V(B[z],K[z],L):B[z];b?(S.copy(F.normals[0]).multiplyScalar(A.x),P.copy(F.binormals[0]).multiplyScalar(A.y),w.copy(M[0]).add(S).add(P),ot(w.x,w.y,w.z)):ot(A.x,A.y,0)}for(let z=1;z<=a;z++)for(let A=0;A<G;A++){const v=p?V(B[A],K[A],L):B[A];b?(S.copy(F.normals[z]).multiplyScalar(v.x),P.copy(F.binormals[z]).multiplyScalar(v.y),w.copy(M[z]).add(S).add(P),ot(w.x,w.y,w.z)):ot(v.x,v.y,u/a*z)}for(let z=m-1;z>=0;z--){const A=z/m,v=d*Math.cos(A*Math.PI/2),k=f*Math.sin(A*Math.PI/2)+y;for(let C=0,W=O.length;C<W;C++){const q=V(O[C],N[C],k);ot(q.x,q.y,u+v)}for(let C=0,W=E.length;C<W;C++){const q=E[C];J=H[C];for(let X=0,rt=q.length;X<rt;X++){const et=V(q[X],J[X],k);b?ot(et.x,et.y+M[a-1].y,M[a-1].x+v):ot(et.x,et.y,u+v)}}}ct(),xt();function ct(){const z=s.length/3;if(p){let A=0,v=G*A;for(let k=0;k<Q;k++){const C=U[k];Ft(C[2]+v,C[1]+v,C[0]+v)}A=a+m*2,v=G*A;for(let k=0;k<Q;k++){const C=U[k];Ft(C[0]+v,C[1]+v,C[2]+v)}}else{for(let A=0;A<Q;A++){const v=U[A];Ft(v[2],v[1],v[0])}for(let A=0;A<Q;A++){const v=U[A];Ft(v[0]+G*a,v[1]+G*a,v[2]+G*a)}}i.addGroup(z,s.length/3-z,0)}function xt(){const z=s.length/3;let A=0;tt(O,A),A+=O.length;for(let v=0,k=E.length;v<k;v++){const C=E[v];tt(C,A),A+=C.length}i.addGroup(z,s.length/3-z,1)}function tt(z,A){let v=z.length;for(;--v>=0;){const k=v;let C=v-1;C<0&&(C=z.length-1);for(let W=0,q=a+m*2;W<q;W++){const X=G*W,rt=G*(W+1),et=A+k+X,pe=A+C+X,$e=A+C+rt,Ct=A+k+rt;_e(et,pe,$e,Ct)}}}function ot(z,A,v){h.push(z),h.push(A),h.push(v)}function Ft(z,A,v){ut(z),ut(A),ut(v);const k=s.length/3,C=_.generateTopUV(i,s,k-3,k-2,k-1);pt(C[0]),pt(C[1]),pt(C[2])}function _e(z,A,v,k){ut(z),ut(A),ut(k),ut(A),ut(v),ut(k);const C=s.length/3,W=_.generateSideWallUV(i,s,C-6,C-3,C-2,C-1);pt(W[0]),pt(W[1]),pt(W[3]),pt(W[1]),pt(W[2]),pt(W[3])}function ut(z){s.push(h[z*3+0]),s.push(h[z*3+1]),s.push(h[z*3+2])}function pt(z){n.push(z.x),n.push(z.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,i=this.parameters.options;return Mn(e,i,t)}static fromJSON(t,e){const i=[];for(let n=0,r=t.shapes.length;n<r;n++){const o=e[t.shapes[n]];i.push(o)}const s=t.options.extrudePath;return s!==void 0&&(t.options.extrudePath=new vi[s.type]().fromJSON(s)),new Ei(i,t.options)}}const wn={generateTopUV:function(c,t,e,i,s){const n=t[e*3],r=t[e*3+1],o=t[i*3],h=t[i*3+1],l=t[s*3],a=t[s*3+1];return[new T(n,r),new T(o,h),new T(l,a)]},generateSideWallUV:function(c,t,e,i,s,n){const r=t[e*3],o=t[e*3+1],h=t[e*3+2],l=t[i*3],a=t[i*3+1],u=t[i*3+2],p=t[s*3],d=t[s*3+1],f=t[s*3+2],y=t[n*3],m=t[n*3+1],g=t[n*3+2];return Math.abs(o-a)<Math.abs(r-l)?[new T(r,1-h),new T(l,1-u),new T(p,1-f),new T(y,1-g)]:[new T(o,1-h),new T(a,1-u),new T(d,1-f),new T(m,1-g)]}};function Mn(c,t,e){if(e.shapes=[],Array.isArray(c))for(let i=0,s=c.length;i<s;i++){const n=c[i];e.shapes.push(n.uuid)}else e.shapes.push(c.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:os}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=os);class Mi{constructor(t){this.top=0,this.array=new Float32Array(t)}write(t){this.array[this.top++]=t.x,this.array[this.top++]=t.y,this.array[this.top++]=t.z}}class zn{constructor(t){this.top=0,this.array=new Float32Array(t)}write(t){this.array[this.top++]=t.x,this.array[this.top++]=t.y}}class St{constructor(t){this.plane=null,this.front=null,this.back=null,this.polygons=[],t&&this.build(t)}clone(){const t=new St;return t.plane=this.plane&&this.plane.clone(),t.front=this.front&&this.front.clone(),t.back=this.back&&this.back.clone(),t.polygons=this.polygons.map(e=>e.clone()),t}invert(){for(let e=0;e<this.polygons.length;e++)this.polygons[e].flip();this.plane&&this.plane.flip(),this.front&&this.front.invert(),this.back&&this.back.invert();const t=this.front;this.front=this.back,this.back=t}clipPolygons(t){if(!this.plane)return t.slice();let e=new Array,i=new Array;for(let s=0;s<t.length;s++)this.plane.splitPolygon(t[s],e,i,e,i);return this.front&&(e=this.front.clipPolygons(e)),this.back?i=this.back.clipPolygons(i):i=[],e.concat(i)}clipTo(t){this.polygons=t.clipPolygons(this.polygons),this.front&&this.front.clipTo(t),this.back&&this.back.clipTo(t)}allPolygons(){let t=this.polygons.slice();return this.front&&(t=t.concat(this.front.allPolygons())),this.back&&(t=t.concat(this.back.allPolygons())),t}build(t){if(!t.length)return;this.plane||(this.plane=t[0].plane.clone());const e=[],i=[];for(let s=0;s<t.length;s++)this.plane.splitPolygon(t[s],this.polygons,this.polygons,e,i);e.length&&(this.front||(this.front=new St),this.front.build(e)),i.length&&(this.back||(this.back=new St),this.back.build(i))}}class lt{constructor(t=0,e=0,i=0){this.x=t,this.y=e,this.z=i}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}clone(){return new lt(this.x,this.y,this.z)}negate(){return this.x*=-1,this.y*=-1,this.z*=-1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}times(t){return this.x*=t,this.y*=t,this.z*=t,this}dividedBy(t){return this.x/=t,this.y/=t,this.z/=t,this}lerp(t,e){return this.add(new lt().copy(t).sub(this).times(e))}unit(){return this.dividedBy(this.length())}length(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2)+Math.pow(this.z,2))}normalize(){return this.unit()}cross(t){const e=this.clone(),i=e.x,s=e.y,n=e.z,r=t.x,o=t.y,h=t.z;return this.x=s*h-n*o,this.y=n*r-i*h,this.z=i*o-s*r,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}toVector3(){return new x(this.x,this.y,this.z)}}class Ht{constructor(t,e){this.normal=t,this.w=e,this.normal=t,this.w=e}clone(){return new Ht(this.normal.clone(),this.w)}flip(){this.normal.negate(),this.w=-this.w}splitPolygon(t,e,i,s,n){let a=0;const u=[];for(let p=0;p<t.vertices.length;p++){const d=this.normal.dot(t.vertices[p].pos)-this.w,f=d<-Ht.EPSILON?2:d>Ht.EPSILON?1:0;a|=f,u.push(f)}switch(a){case 0:(this.normal.dot(t.plane.normal)>0?e:i).push(t);break;case 1:s.push(t);break;case 2:n.push(t);break;case 3:{const p=[],d=[];for(let f=0;f<t.vertices.length;f++){const y=(f+1)%t.vertices.length,m=u[f],g=u[y],_=t.vertices[f],M=t.vertices[y];if(m!=2&&p.push(_),m!=1&&d.push(m!=2?_.clone():_),(m|g)==3){const b=(this.w-this.normal.dot(_.pos))/this.normal.dot(new lt().copy(M.pos).sub(_.pos)),F=_.interpolate(M,b);p.push(F),d.push(F.clone())}}p.length>=3&&s.push(new le(p,t.shared)),d.length>=3&&n.push(new le(d,t.shared));break}}}static fromPoints(t,e,i){const s=new lt().copy(e).sub(t).cross(new lt().copy(i).sub(t)).normalize();return new Ht(s.clone(),s.dot(t))}}Ht.EPSILON=1e-5;class le{constructor(t,e){this.vertices=t,this.shared=e,this.plane=Ht.fromPoints(t[0].pos,t[1].pos,t[2].pos)}clone(){return new le(this.vertices.map(t=>t.clone()),this.shared)}flip(){this.vertices.reverse().map(t=>t.flip()),this.plane.flip()}}class Ge{constructor(t,e,i,s){this.pos=new lt().copy(t),this.normal=new lt().copy(e),this.uv=new lt().copy(i),this.uv.z=0,s&&(this.color=new lt().copy(s))}clone(){return new Ge(this.pos,this.normal,this.uv,this.color)}flip(){this.normal.negate()}interpolate(t,e){return new Ge(this.pos.clone().lerp(t.pos,e),this.normal.clone().lerp(t.normal,e),this.uv.clone().lerp(t.uv,e),this.color&&t.color&&this.color.clone().lerp(t.color,e))}}class Y{constructor(){this.polygons=[]}static fromPolygons(t){const e=new Y;return e.polygons=t,e}static fromGeometry(t,e){let i=[];const s=t.attributes.position,n=t.attributes.normal,r=t.attributes.uv,o=t.attributes.color,h=t.groups;let l;if(t.index)l=t.index.array;else{l=new Uint16Array(s.array.length/s.itemSize|0);for(let u=0;u<l.length;u++)l[u]=u}const a=l.length/3|0;i=new Array(a);for(let u=0,p=0,d=l.length;u<d;u+=3,p++){const f=new Array(3);for(let y=0;y<3;y++){const m=l[u+y],g=m*3,_=m*2,M=s.array[g],b=s.array[g+1],F=s.array[g+2],P=n.array[g],S=n.array[g+1],w=n.array[g+2],R=r==null?void 0:r.array[_],B=r==null?void 0:r.array[_+1];f[y]=new Ge(new lt(M,b,F),new lt(P,S,w),new lt(R,B,0),o&&new lt(o.array[g],o.array[g+1],o.array[g+2]))}if(e===void 0&&h&&h.length>0)for(const y of h)u>=y.start&&u<y.start+y.count&&(i[p]=new le(f,y.materialIndex));else i[p]=new le(f,e)}return Y.fromPolygons(i.filter(u=>!Number.isNaN(u.plane.normal.x)))}static toGeometry(t,e){let i=0;const s=t.polygons;for(const d of s)i+=d.vertices.length-2;const n=new vt,r=new Mi(i*3*3),o=new Mi(i*3*3),h=new zn(i*2*3);let l;const a=[],u=[];for(const d of s){const f=d.vertices,y=f.length;d.shared!==void 0&&(a[d.shared]||(a[d.shared]=[])),y&&f[0].color!==void 0&&(l||(l=new Mi(i*3*3)));for(let m=3;m<=y;m++)(d.shared===void 0?u:a[d.shared]).push(r.top/3,r.top/3+1,r.top/3+2),r.write(f[0].pos),r.write(f[m-2].pos),r.write(f[m-1].pos),o.write(f[0].normal),o.write(f[m-2].normal),o.write(f[m-1].normal),h&&(h.write(f[0].uv),h.write(f[m-2].uv),h.write(f[m-1].uv)),l&&(l.write(f[0].color),l.write(f[m-2].color),l.write(f[m-1].color))}n.setAttribute("position",new at(r.array,3)),n.setAttribute("normal",new at(o.array,3)),h&&n.setAttribute("uv",new at(h.array,2)),l&&n.setAttribute("color",new at(l.array,3));for(let d=0;d<a.length;d++)a[d]===void 0&&(a[d]=[]);if(a.length){let d=[],f=0;for(let y=0;y<a.length;y++)n.addGroup(f,a[y].length,y),f+=a[y].length,d=d.concat(a[y]);n.addGroup(f,u.length,a.length),d=d.concat(u),n.setIndex(d)}const p=new yt().copy(e).invert();return n.applyMatrix4(p),n.computeBoundingSphere(),n.computeBoundingBox(),n}static fromMesh(t,e){const i=Y.fromGeometry(t.geometry,e),s=new x,n=new Nt;n.getNormalMatrix(t.matrix);for(let r=0;r<i.polygons.length;r++){const o=i.polygons[r];for(let h=0;h<o.vertices.length;h++){const l=o.vertices[h];l.pos.copy(s.copy(l.pos.toVector3()).applyMatrix4(t.matrix)),l.normal.copy(s.copy(l.normal.toVector3()).applyMatrix3(n))}}return i}static toMesh(t,e,i){const s=Y.toGeometry(t,e),n=new Si(s,i);return n.matrix.copy(e),n.matrix.decompose(n.position,n.quaternion,n.scale),n.rotation.setFromQuaternion(n.quaternion),n.updateMatrixWorld(),n.castShadow=n.receiveShadow=!0,n}static union(t,e){const i=Y.fromMesh(t),s=Y.fromMesh(e);return Y.toMesh(i.union(s),t.matrix,t.material)}static subtract(t,e){const i=Y.fromMesh(t),s=Y.fromMesh(e);return Y.toMesh(i.subtract(s),t.matrix,t.material)}static intersect(t,e){const i=Y.fromMesh(t),s=Y.fromMesh(e);return Y.toMesh(i.intersect(s),t.matrix,t.material)}clone(){const t=new Y;return t.polygons=this.polygons.map(e=>e.clone()).filter(e=>Number.isFinite(e.plane.w)),t}toPolygons(){return this.polygons}union(t){const e=new St(this.clone().polygons),i=new St(t.clone().polygons);return e.clipTo(i),i.clipTo(e),i.invert(),i.clipTo(e),i.invert(),e.build(i.allPolygons()),Y.fromPolygons(e.allPolygons())}subtract(t){const e=new St(this.clone().polygons),i=new St(t.clone().polygons);return e.invert(),e.clipTo(i),i.clipTo(e),i.invert(),i.clipTo(e),i.invert(),e.build(i.allPolygons()),e.invert(),Y.fromPolygons(e.allPolygons())}intersect(t){const e=new St(this.clone().polygons),i=new St(t.clone().polygons);return e.invert(),i.clipTo(e),i.invert(),e.clipTo(i),i.clipTo(e),e.build(i.allPolygons()),e.invert(),Y.fromPolygons(e.allPolygons())}inverse(){const t=this.clone();for(const e of t.polygons)e.flip();return t}toMesh(t,e){return Y.toMesh(this,t,e)}toGeometry(t){return Y.toGeometry(this,t)}}function An(c,t=!1){const e=c[0].index!==null,i=new Set(Object.keys(c[0].attributes)),s=new Set(Object.keys(c[0].morphAttributes)),n={},r={},o=c[0].morphTargetsRelative,h=new vt;let l=0;for(let a=0;a<c.length;++a){const u=c[a];let p=0;if(e!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+a+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const d in u.attributes){if(!i.has(d))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+a+'. All geometries must have compatible attributes; make sure "'+d+'" attribute exists among all geometries, or in none of them.'),null;n[d]===void 0&&(n[d]=[]),n[d].push(u.attributes[d]),p++}if(p!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+a+". Make sure all geometries have the same number of attributes."),null;if(o!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+a+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const d in u.morphAttributes){if(!s.has(d))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+a+".  .morphAttributes must be consistent throughout all geometries."),null;r[d]===void 0&&(r[d]=[]),r[d].push(u.morphAttributes[d])}if(t){let d;if(e)d=u.index.count;else if(u.attributes.position!==void 0)d=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+a+". The geometry must have either an index or a position attribute"),null;h.addGroup(l,d,a),l+=d}}if(e){let a=0;const u=[];for(let p=0;p<c.length;++p){const d=c[p].index;for(let f=0;f<d.count;++f)u.push(d.getX(f)+a);a+=c[p].attributes.position.count}h.setIndex(u)}for(const a in n){const u=rs(n[a]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+a+" attribute."),null;h.setAttribute(a,u)}for(const a in r){const u=r[a][0].length;if(u===0)break;h.morphAttributes=h.morphAttributes||{},h.morphAttributes[a]=[];for(let p=0;p<u;++p){const d=[];for(let y=0;y<r[a].length;++y)d.push(r[a][y][p]);const f=rs(d);if(!f)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+a+" morphAttribute."),null;h.morphAttributes[a].push(f)}}return h}function rs(c){let t,e,i,s=-1,n=0;for(let l=0;l<c.length;++l){const a=c[l];if(t===void 0&&(t=a.array.constructor),t!==a.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(e===void 0&&(e=a.itemSize),e!==a.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(i===void 0&&(i=a.normalized),i!==a.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(s===-1&&(s=a.gpuType),s!==a.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;n+=a.count*e}const r=new t(n),o=new at(r,e,i);let h=0;for(let l=0;l<c.length;++l){const a=c[l];if(a.isInterleavedBufferAttribute){const u=h/e;for(let p=0,d=a.count;p<d;p++)for(let f=0;f<e;f++){const y=a.getComponent(p,f);o.setComponent(p+u,f,y)}}else r.set(a.array,h);h+=a.count*e}return s!==void 0&&(o.gpuType=s),o}function zi(c,t,e,i,s,n,r){const{width:o,height:h}=i;if(c<s.minLng||c>s.maxLng||t<s.minLat||t>s.maxLat)return n;const l=(c-s.minLng)/(s.maxLng-s.minLng)*(o-1),a=(t-s.minLat)/(s.maxLat-s.minLat)*(h-1),u=Math.floor(l),p=Math.floor(a),d=Math.min(u+1,o-1),f=Math.min(p+1,h-1),y=l-u,m=a-p,g=e[p][u],_=e[p][d],M=e[f][u],b=e[f][d],F=g*(1-y)+_*y,P=M*(1-y)+b*y,S=F*(1-m)+P*m,w=Math.max(0,Math.min(1,(S-n)/(r-n||1)));return n+w*(r-n)}function Sn({lng:c,lat:t,bbox:[e,i,s,n]}){const r=(c-e)/(s-e)-.5,o=(t-i)/(n-i)-.5;return[r*200,o*200]}function vn(c,t,e,i,s,n){const h=(t+i)/2,l=111320*Math.cos(h*Math.PI/180),a=111320,u=(e-c)*l,p=(i-t)*a;let f=Math.max(u/200,p/200);return Math.min(.5,Math.max(5e-4,f))}const _n=.01;function Fn({bbox:[c,t,e,i],polygons:s,terrainBaseHeight:n,elevationGrid:r,gridSize:o,minElevation:h,maxElevation:l,vtDataSet:a,useSameZOffset:u=!1}){console.log(`Processing ${s.length} polygons for ${a.sourceLayer}`);const p=[],d=500,f=.5;let y=1/0,m=-1/0;const g=10;for(let w=0;w<g;w++){const R=c+(e-c)*(w/(g-1));for(let B=0;B<g;B++){const E=t+(i-t)*(B/(g-1)),D=zi(R,E,r,o,{minLng:c,minLat:t,maxLng:e,maxLat:i},h,l);y=Math.min(y,D),m=Math.max(m,D)}}const _=200,M=new Ci(_,_,_*5),b=new Si(M,new Ai);b.position.set(0,0,-10);const F=new ue;F.setFromObject(b);function P(w){if(w.boundingBox||w.computeBoundingBox(),w.boundingBox&&!F.intersectsBox(w.boundingBox))return null;try{if(!w||!w.attributes||!w.attributes.position||w.attributes.position.count===0)return null;const R=w.clone();R.attributes.color&&R.deleteAttribute("color");const B=new Ai,E=new Si(R,B);try{const D=Y.intersect(E,b),U=D.geometry.attributes.position.array;for(let O=2;O<U.length;O+=3)if(U[O]<0){return console.warn("Resulting geometry has a point below z=0, returning original geometry",w),null;return w}if(D&&D.geometry&&D.geometry.attributes&&D.geometry.attributes.position&&D.geometry.attributes.position.count>0){if(w.attributes.color){const O=w.attributes.color,V=new Float32Array(D.geometry.attributes.position.count*3),G=O.array?O.array[0]:.7,Q=O.array?O.array[1]:.7,nt=O.array?O.array[2]:.7;for(let N=0;N<V.length;N+=3)V[N]=G,V[N+1]=Q,V[N+2]=nt;D.geometry.setAttribute("color",new at(V,3))}return D.geometry}return null}catch(D){return console.warn("CSG intersection failed:",D),w}}catch(R){return console.error("Unhandled error during geometry clipping:",R),w}return w}if(s.forEach((w,R)=>{let B=a.extrusionDepth||w.height||m-y+.1;a.minExtrusionDepth&&B<a.minExtrusionDepth&&(B=a.minExtrusionDepth);const E=w.geometry;if(!E||E.length<3)return;const D=E.map(([L,ct])=>new T(L,ct));he.isClockWise(D)||D.reverse();let U=1/0;const O=[];D.forEach(L=>{const ct=L.x,xt=L.y,tt=zi(ct,xt,r,o,{minLng:c,minLat:t,maxLng:e,maxLat:i},h,l);U=Math.min(U,tt),O.push(Sn({lng:ct,lat:xt,bbox:[c,t,e,i]}))}),u&&(U=y);let V=Math.min(Math.max(B,f),d);if(a.useAdaptiveScaleFactor){const L=vn(c,t,e,i);V=V*L}a.heightScaleFactor&&(V=V*a.heightScaleFactor);const G=U+(typeof(a==null?void 0:a.zOffset)<"u"?a.zOffset:0)-_n,Q=new fs;Q.moveTo(O[0][0],O[0][1]);for(let L=1;L<O.length;L++)Q.lineTo(O[L][0],O[L][1]);Q.autoClose=!0;const nt={steps:1,depth:V,bevelEnabled:!0},N=new Ei(Q,nt);if(N.translate(0,0,G),a.alignVerticesToTerrain){const L=N.attributes.position,ct=200,xt=new Map;for(let tt=0;tt<L.count;tt++){const ot=L.getX(tt),Ft=L.getY(tt);if(L.getZ(tt)<=G+.1)continue;const ut=`${Math.round(ot*1e3)},${Math.round(Ft*1e3)}`;if(!xt.has(ut)){const pt=c+(ot+ct/2)/ct*(e-c),z=t+(Ft+ct/2)/ct*(i-t),A=zi(pt,z,r,o,{minLng:c,minLat:t,maxLng:e,maxLat:i},h,l);xt.set(ut,A)}}for(let tt=0;tt<L.count;tt++){const ot=L.getX(tt),Ft=L.getY(tt),_e=L.getZ(tt);if(Math.abs(_e-(G+V))<.1){const pt=`${Math.round(ot*1e3)},${Math.round(Ft*1e3)}`,z=xt.get(pt);z!==void 0&&L.setZ(tt,z+V)}}L.needsUpdate=!0,N.computeVertexNormals()}N.computeVertexNormals();const H=new ae(a.color),J=new Float32Array(N.attributes.position.count*3);for(let L=0;L<N.attributes.position.count;L++)J[L*3]=H.r,J[L*3+1]=H.g,J[L*3+2]=H.b;N.setAttribute("color",new at(J,3)),N.hasAttribute("uv")&&N.deleteAttribute("uv");const K=P(N);K&&K.attributes&&K.attributes.position&&K.attributes.position.count>0&&p.push(K)}),!p.length)return new vt;const S=[];for(const w of p){if(!w.attributes||!w.attributes.position){console.warn("Skipping geometry without position attribute");continue}const R=w.clone();if(R.attributes.normal||R.computeVertexNormals(),!R.attributes.color){const B=new ae(a.color),E=new Float32Array(R.attributes.position.count*3);for(let D=0;D<R.attributes.position.count;D++)E[D*3]=B.r,E[D*3+1]=B.g,E[D*3+2]=B.b;R.setAttribute("color",new at(E,3))}R.attributes.position.count>=3&&S.push(R)}if(console.log(`Merging ${S.length} normalized geometries`),S.length===0)return new vt;if(S.length===1)return S[0];try{const w=An(S,!1);return w||(console.warn("Merge operation returned null geometry"),new vt)}catch(w){return console.error("Error merging geometries:",w),S[0]}}let Ze=!1;self.onmessage=c=>{if(c.data.type==="cancel"){console.log("[Worker]: Received cancellation signal"),Ze=!0,self.postMessage({status:"cancelled",message:"Worker acknowledged cancellation"});return}try{const{id:t,data:e}=c.data;Ze=!1,console.log(`[Worker ${t}]: Starting polygon geometry processing`);const{bbox:i,polygons:s,terrainBaseHeight:n,elevationGrid:r,gridSize:o,minElevation:h,maxElevation:l,vtDataSet:a,useSameZOffset:u}=e,p=performance.now();if(Ze)throw console.log(`[Worker ${t}]: Task was cancelled before processing started`),new Error("Task was cancelled");const d=Fn({polygons:s,terrainBaseHeight:n,bbox:i,elevationGrid:r,gridSize:o,minElevation:h,maxElevation:l,vtDataSet:a,useSameZOffset:u});if(!d)throw new Error("Invalid geometry: geometry is null or undefined");if(Ze)throw console.log(`[Worker ${t}]: Task was cancelled during processing`),new Error("Task was cancelled");console.log(`[Worker ${t}]: Geometry created with attributes:`,Object.keys(d.attributes||{}).join(", "));const f=Cn(d),y=performance.now();console.log(`[Worker ${t}]: Finished in ${(y-p).toFixed(1)}ms`),console.log(`[Worker ${t}]: Sending serialized geometry with vertex count:`,f.vertices.length/3);const m=JSON.stringify(f);self.postMessage({id:t,status:"success",result:m,dataType:"json-string"})}catch(t){console.error("[Worker] Error:",t),self.postMessage({id:c.data.id,status:"error",error:t instanceof Error?t.message:String(t)})}};function Cn(c){const t={};try{if(!c||!c.attributes)return console.warn("Invalid geometry received for serialization"),{vertices:[],hasData:!1};if(c.attributes.position&&c.attributes.position.array){const e=c.attributes.position.array;t.vertices=Array.from(e),console.log(`Position attribute found with ${e.length} elements`)}else return console.warn("Missing position attribute in geometry"),t.vertices=[],t.hasData=!1,t;c.attributes.normal&&c.attributes.normal.array&&(t.normals=Array.from(c.attributes.normal.array)),c.attributes.uv&&c.attributes.uv.array&&(t.uvs=Array.from(c.attributes.uv.array)),c.index&&c.index.array&&(t.indices=Array.from(c.index.array)),c.attributes.color&&c.attributes.color.array&&(t.colors=Array.from(c.attributes.color.array)),t.hasData=!0}catch(e){return console.error("Error during geometry serialization:",e),{vertices:[],hasData:!1,error:e instanceof Error?e.message:String(e)}}return t}console.log("[PolygonGeometryWorker] Initialized and ready for tasks");
